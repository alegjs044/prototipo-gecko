{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roger\\\\Documents\\\\TT2_AVANCES\\\\prototipo-gecko\\\\frontend\\\\src\\\\pages\\\\pruebasNotificaciones.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TemperaturaAlert = ({\n  temperatura,\n  setTemperatura\n}) => {\n  _s();\n  const [inputValue, setInputValue] = useState(temperatura.toString());\n  const [lastAlertValue, setLastAlertValue] = useState(null);\n  const [alertStatus, setAlertStatus] = useState('');\n  const [cooldown, setCooldown] = useState(false);\n  const {\n    userToken\n  } = localStorage.getItem(\"token\"); // Obtener el token de usuario desde un hook o contexto\n\n  const enviar_temperatura_alert = async temp => {\n    setAlertStatus('Enviando alerta...');\n    try {\n      const temperaturaFormateada = temp.toFixed(2); // Asegurar que la temperatura se envía como string con 2 decimales\n\n      console.log(\"Enviando temperatura formateada:\", temperaturaFormateada);\n      const response = await fetch(\"http://localhost:5000/send-email\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          temperatura: parseFloat(temperaturaFormateada),\n          // Convertir a número de nuevo\n          id_usuario: userToken // Incluir el token de usuario\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log(\"Alerta enviada con éxito:\", data.message);\n        setAlertStatus('Alerta enviada con éxito');\n        setLastAlertValue(temp); // Guardamos el valor actual como el último valor de alerta\n\n        setCooldown(true); // Establecemos un tiempo de espera para evitar el spam de alertas\n        setTimeout(() => setCooldown(false), 10000); // 10 segundos de cooldown\n      } else {\n        console.error(\"Error en la respuesta del servidor:\", data.message);\n        setAlertStatus(`Error: ${data.message}`);\n      }\n    } catch (error) {\n      console.error(\"Error al enviar la alerta:\", error);\n      setAlertStatus(`Error de conexión: ${error.message}`);\n    }\n  };\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleUpdateTemperature = () => {\n    const newTemperatura = parseFloat(inputValue);\n    if (!isNaN(newTemperatura)) {\n      setTemperatura(newTemperatura);\n    } else {\n      setAlertStatus('Por favor ingrese un número válido');\n      setTimeout(() => setAlertStatus(''), 3000);\n    }\n  };\n  useEffect(() => {\n    if (isNaN(temperatura)) return;\n    const fueraDeRango = temperatura < 22 || temperatura > 32;\n    if (fueraDeRango) {\n      const debeEnviarAlerta = lastAlertValue === null || Math.abs(temperatura - lastAlertValue) >= 1 || lastAlertValue > 32 && temperatura < 22 || lastAlertValue < 22 && temperatura > 32;\n      if (debeEnviarAlerta && !cooldown) {\n        console.log(\"Enviando alerta por temperatura:\", temperatura);\n        enviar_temperatura_alert(temperatura);\n      }\n    } else {\n      if (lastAlertValue !== null) {\n        setLastAlertValue(null);\n        setAlertStatus('Temperatura normalizada');\n        setTimeout(() => {\n          if (temperatura >= 22 && temperatura <= 32) {\n            setAlertStatus('');\n          }\n        }, 3000);\n      }\n    }\n  }, [temperatura, lastAlertValue, cooldown]);\n  useEffect(() => {\n    setInputValue(temperatura.toString());\n  }, [temperatura]);\n  const getTemperatureStyle = () => {\n    if (temperatura > 32) return {\n      color: 'red',\n      fontWeight: 'bold'\n    };\n    if (temperatura < 22) return {\n      color: 'blue',\n      fontWeight: 'bold'\n    };\n    return {\n      color: 'green'\n    };\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!inputValue || !userToken) {\n      alert('Todos los campos son obligatorios');\n      return;\n    }\n    const newTemperatura = parseFloat(inputValue);\n    if (!isNaN(newTemperatura)) {\n      setTemperatura(newTemperatura);\n      enviar_temperatura_alert(newTemperatura);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TemperaturaAlert\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Monitoreo De Temperatura\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"p-4 border rounded shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        children: [\"Temperatura:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: inputValue,\n          onChange: handleInputChange,\n          step: \"0.1\",\n          style: {\n            width: '80px'\n          },\n          className: \"border p-2 w-full\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: '5px 15px',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temperatura actual: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: getTemperatureStyle(),\n        children: [temperatura.toFixed(2), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), temperatura < 22 && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'blue'\n      },\n      children: \"\\u26A0\\uFE0F Temperatura por debajo del rango normal (22\\xB0C - 32\\xB0C)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), temperatura > 32 && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: \"\\u26A0\\uFE0F Temperatura por encima del rango normal (22\\xB0C - 32\\xB0C)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), cooldown && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'gray'\n      },\n      children: \"\\u23F1\\uFE0F Esperando para enviar la siguiente alerta...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), alertStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"alert-status\",\n      children: alertStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 23\n    }, this), lastAlertValue !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px',\n        fontSize: '0.9em',\n        color: '#555'\n      },\n      children: [\"\\xDAltima alerta enviada: \", lastAlertValue.toFixed(2), \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(TemperaturaAlert, \"I/uslIiysgS1kJ7pMV9ImoXmBao=\");\n_c = TemperaturaAlert;\nexport default TemperaturaAlert;\nvar _c;\n$RefreshReg$(_c, \"TemperaturaAlert\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","TemperaturaAlert","temperatura","setTemperatura","_s","inputValue","setInputValue","toString","lastAlertValue","setLastAlertValue","alertStatus","setAlertStatus","cooldown","setCooldown","userToken","localStorage","getItem","enviar_temperatura_alert","temp","temperaturaFormateada","toFixed","console","log","response","fetch","method","headers","body","JSON","stringify","parseFloat","id_usuario","data","json","ok","message","setTimeout","error","handleInputChange","e","target","value","handleUpdateTemperature","newTemperatura","isNaN","fueraDeRango","debeEnviarAlerta","Math","abs","getTemperatureStyle","color","fontWeight","handleSubmit","preventDefault","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","step","style","width","required","padding","backgroundColor","border","borderRadius","cursor","marginTop","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/Roger/Documents/TT2_AVANCES/prototipo-gecko/frontend/src/pages/pruebasNotificaciones.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\n\r\nconst TemperaturaAlert = ({ temperatura, setTemperatura }) => {\r\n  const [inputValue, setInputValue] = useState(temperatura.toString());\r\n  const [lastAlertValue, setLastAlertValue] = useState(null);\r\n  const [alertStatus, setAlertStatus] = useState('');\r\n  const [cooldown, setCooldown] = useState(false);\r\n  const { userToken } = localStorage.getItem(\"token\"); // Obtener el token de usuario desde un hook o contexto\r\n\r\n  const enviar_temperatura_alert = async (temp) => {\r\n    setAlertStatus('Enviando alerta...');\r\n    try {\r\n      const temperaturaFormateada = temp.toFixed(2); // Asegurar que la temperatura se envía como string con 2 decimales\r\n      \r\n      console.log(\"Enviando temperatura formateada:\", temperaturaFormateada);\r\n      \r\n      const response = await fetch(\"http://localhost:5000/send-email\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ \r\n          temperatura: parseFloat(temperaturaFormateada), // Convertir a número de nuevo\r\n          id_usuario: userToken, // Incluir el token de usuario\r\n        }),\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (response.ok) {\r\n        console.log(\"Alerta enviada con éxito:\", data.message);\r\n        setAlertStatus('Alerta enviada con éxito');\r\n        \r\n        setLastAlertValue(temp); // Guardamos el valor actual como el último valor de alerta\r\n        \r\n        setCooldown(true); // Establecemos un tiempo de espera para evitar el spam de alertas\r\n        setTimeout(() => setCooldown(false), 10000); // 10 segundos de cooldown\r\n        \r\n      } else {\r\n        console.error(\"Error en la respuesta del servidor:\", data.message);\r\n        setAlertStatus(`Error: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al enviar la alerta:\", error);\r\n      setAlertStatus(`Error de conexión: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleUpdateTemperature = () => {\r\n    const newTemperatura = parseFloat(inputValue);\r\n    \r\n    if (!isNaN(newTemperatura)) {\r\n      setTemperatura(newTemperatura);\r\n    } else {\r\n      setAlertStatus('Por favor ingrese un número válido');\r\n      setTimeout(() => setAlertStatus(''), 3000);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNaN(temperatura)) return;\r\n    \r\n    const fueraDeRango = temperatura < 22 || temperatura > 32;\r\n    \r\n    if (fueraDeRango) {\r\n      const debeEnviarAlerta = \r\n        lastAlertValue === null || \r\n        Math.abs(temperatura - lastAlertValue) >= 1 || \r\n        (lastAlertValue > 32 && temperatura < 22) || \r\n        (lastAlertValue < 22 && temperatura > 32);\r\n      \r\n      if (debeEnviarAlerta && !cooldown) {\r\n        console.log(\"Enviando alerta por temperatura:\", temperatura);\r\n        enviar_temperatura_alert(temperatura);\r\n      }\r\n    } else {\r\n      if (lastAlertValue !== null) {\r\n        setLastAlertValue(null);\r\n        setAlertStatus('Temperatura normalizada');\r\n        \r\n        setTimeout(() => {\r\n          if (temperatura >= 22 && temperatura <= 32) {\r\n            setAlertStatus('');\r\n          }\r\n        }, 3000);\r\n      }\r\n    }\r\n  }, [temperatura, lastAlertValue, cooldown]);\r\n\r\n  useEffect(() => {\r\n    setInputValue(temperatura.toString());\r\n  }, [temperatura]);\r\n\r\n  const getTemperatureStyle = () => {\r\n    if (temperatura > 32) return { color: 'red', fontWeight: 'bold' };\r\n    if (temperatura < 22) return { color: 'blue', fontWeight: 'bold' };\r\n    return { color: 'green' };\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!inputValue || !userToken) {\r\n      alert('Todos los campos son obligatorios');\r\n      return;\r\n    }\r\n\r\n    const newTemperatura = parseFloat(inputValue);\r\n    if (!isNaN(newTemperatura)) {\r\n      setTemperatura(newTemperatura);\r\n      enviar_temperatura_alert(newTemperatura);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"TemperaturaAlert\">\r\n      <h2>Monitoreo De Temperatura</h2>\r\n      <form onSubmit={handleSubmit} className=\"p-4 border rounded shadow-md\">\r\n        <label className=\"block mb-2\">\r\n          Temperatura:\r\n          <input \r\n            type=\"number\" \r\n            value={inputValue} \r\n            onChange={handleInputChange} \r\n            step=\"0.1\"\r\n            style={{ width: '80px' }}\r\n            className=\"border p-2 w-full\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button \r\n          type=\"submit\"\r\n          style={{\r\n            padding: '5px 15px',\r\n            backgroundColor: '#4CAF50',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          Enviar\r\n        </button>\r\n      </form>\r\n\r\n      <p>Temperatura actual: <span style={getTemperatureStyle()}>{temperatura.toFixed(2)}°C</span></p>\r\n\r\n      {temperatura < 22 && \r\n        <p style={{color: 'blue'}}>\r\n          ⚠️ Temperatura por debajo del rango normal (22°C - 32°C)\r\n        </p>\r\n      }\r\n      {temperatura > 32 && \r\n        <p style={{color: 'red'}}>\r\n          ⚠️ Temperatura por encima del rango normal (22°C - 32°C)\r\n        </p>\r\n      }\r\n\r\n      {cooldown && \r\n        <p style={{color: 'gray'}}>\r\n          ⏱️ Esperando para enviar la siguiente alerta...\r\n        </p>\r\n      }\r\n\r\n      {alertStatus && <p className=\"alert-status\">{alertStatus}</p>}\r\n\r\n      {lastAlertValue !== null && (\r\n        <div style={{marginTop: '10px', fontSize: '0.9em', color: '#555'}}>\r\n          Última alerta enviada: {lastAlertValue.toFixed(2)}°C\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TemperaturaAlert;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}