{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roger\\\\Documents\\\\TT2_AVANCES\\\\prototipo-gecko\\\\frontend\\\\src\\\\components\\\\Header.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport logo from \"../assets/logo.png\";\nimport notificationIcon from \"../assets/campana.png\";\nimport userIcon from \"../assets/usuario.png\";\nimport { jwtDecode } from \"jwt-decode\";\nimport axios from \"axios\";\nimport { NavBar, LogoImg, NavContent, Menu, MenuItem, RightSection, IconButton, LoginButton, NotificationDropdown, NotificationItem, NotificationTitle, NotificationDescription, NoNotifications, DropdownMenu, DropdownMenuItem, NotificationHeader, NotificationBadge, UnreadIndicator, UserName, NotificationIconContainer } from \"./NavBarStyles\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = ({\n  setHeaderHeight = () => {}\n}) => {\n  _s();\n  const headerRef = useRef(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [menuVisible, setMenuVisible] = useState(false);\n  const [notificationMenuVisible, setNotificationMenuVisible] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const token = localStorage.getItem(\"token\");\n  let username = '';\n  let userId = '';\n  if (token) {\n    try {\n      const decoded = jwtDecode(token);\n      username = decoded.user;\n      userId = decoded.id;\n    } catch (error) {\n      console.error(\"Error al decodificar token:\", error);\n      localStorage.removeItem(\"token\"); // Eliminar token inválido\n    }\n  }\n\n  // Configuración para el polling de notificaciones\n  const POLLING_INTERVAL = 30000; // 30 segundos para recargar notificaciones\n\n  // Efecto para actualizar la altura del header\n  useEffect(() => {\n    if (headerRef.current) {\n      setHeaderHeight(headerRef.current.offsetHeight);\n    }\n    if (token) {\n      setIsAuthenticated(true);\n    } else {\n      setIsAuthenticated(false);\n    }\n  }, [token, setHeaderHeight]);\n\n  // Efecto para cargar notificaciones iniciales y configurar la actualización periódica\n  useEffect(() => {\n    if (isAuthenticated && userId) {\n      fetchNotifications();\n\n      // Configurar intervalo para actualizar notificaciones periódicamente\n      const notificationInterval = setInterval(() => {\n        fetchNotifications();\n      }, POLLING_INTERVAL);\n      return () => clearInterval(notificationInterval);\n    }\n  }, [isAuthenticated, userId, location.pathname]); // Agregado location.pathname para recargar en cambios de ruta\n\n  // Efecto para actualizar el tiempo actual\n  useEffect(() => {\n    const timerInterval = setInterval(() => setCurrentTime(new Date()), 1000);\n    return () => clearInterval(timerInterval);\n  }, []);\n\n  // Función para obtener notificaciones desde el servidor\n  const fetchNotifications = async () => {\n    if (!userId) return;\n    try {\n      const response = await axios.get(`http://localhost:5000/api/getNotificationsByUserId/${userId}`);\n      const data = response.data;\n      if (data.notifications) {\n        const formattedNotifications = data.notifications.map(notif => ({\n          id: notif.id_notificacion,\n          tipo: notif.tipo,\n          descripcion: notif.descripcion,\n          time_alert: notif.time_alert,\n          is_read: notif.is_read === 1 || notif.is_read === true\n        }));\n\n        // Guardar notificaciones en el estado local\n        setNotifications(formattedNotifications);\n\n        // Calcular el número de notificaciones no leídas\n        const unreadNotifications = formattedNotifications.filter(notif => !notif.is_read);\n        setUnreadCount(unreadNotifications.length);\n\n        // También guardar en localStorage para persistencia entre rutas\n        localStorage.setItem('notifications', JSON.stringify(formattedNotifications));\n        localStorage.setItem('unreadCount', unreadNotifications.length.toString());\n      }\n    } catch (error) {\n      console.error(\"Error al obtener notificaciones:\", error);\n\n      // En caso de error, intentar cargar desde localStorage\n      const cachedNotifications = localStorage.getItem('notifications');\n      if (cachedNotifications) {\n        setNotifications(JSON.parse(cachedNotifications));\n        setUnreadCount(parseInt(localStorage.getItem('unreadCount') || '0'));\n      }\n    }\n  };\n\n  // Al iniciar sesión, cargar desde localStorage mientras se obtienen los datos del servidor\n  useEffect(() => {\n    if (isAuthenticated) {\n      const cachedNotifications = localStorage.getItem('notifications');\n      if (cachedNotifications) {\n        setNotifications(JSON.parse(cachedNotifications));\n        setUnreadCount(parseInt(localStorage.getItem('unreadCount') || '0'));\n      }\n    }\n  }, [isAuthenticated]);\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"notifications\");\n    localStorage.removeItem(\"unreadCount\");\n    setIsAuthenticated(false);\n    setNotifications([]);\n    setUnreadCount(0);\n    navigate(\"/login\");\n  };\n  const handleNotificationClick = async notificationId => {\n    try {\n      // Actualizar en la base de datos\n      await axios.post(`http://localhost:5000/api/markNotificationAsRead/${notificationId}/${userId}`);\n\n      // Actualizar el estado local\n      const updatedNotifications = notifications.map(notif => notif.id === notificationId ? {\n        ...notif,\n        is_read: true\n      } : notif);\n      setNotifications(updatedNotifications);\n\n      // Recalcular el contador de no leídas\n      const unreadNotifications = updatedNotifications.filter(notif => !notif.is_read);\n      setUnreadCount(unreadNotifications.length);\n\n      // Actualizar el localStorage\n      localStorage.setItem('notifications', JSON.stringify(updatedNotifications));\n      localStorage.setItem('unreadCount', unreadNotifications.length.toString());\n      setNotificationMenuVisible(false);\n    } catch (error) {\n      console.error(\"Error al marcar notificación como leída:\", error);\n    }\n  };\n  const markAllAsRead = async () => {\n    try {\n      // Actualizar en la base de datos\n      await axios.post(`http://localhost:5000/api/markAllNotificationsAsRead/${userId}`);\n\n      // Actualizar estado local\n      const updatedNotifications = notifications.map(notif => ({\n        ...notif,\n        is_read: true\n      }));\n      setNotifications(updatedNotifications);\n      setUnreadCount(0);\n\n      // Actualizar localStorage\n      localStorage.setItem('notifications', JSON.stringify(updatedNotifications));\n      localStorage.setItem('unreadCount', '0');\n    } catch (error) {\n      console.error(\"Error al marcar todas las notificaciones como leídas:\", error);\n    }\n  };\n  const handleNotificationIconClick = () => {\n    setNotificationMenuVisible(prev => !prev);\n    setMenuVisible(false);\n  };\n  const handleClickOutside = event => {\n    if (notificationMenuVisible || menuVisible) {\n      if (!event.target.closest('.dropdown-menu') && !event.target.matches('[alt=\"Notificaciones\"]') && !event.target.matches('[alt=\"Usuario\"]')) {\n        setNotificationMenuVisible(false);\n        setMenuVisible(false);\n      }\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [notificationMenuVisible, menuVisible]);\n  const getTimeElapsedDynamic = timeStamp => {\n    if (!timeStamp) return \"FECHA DESCONOCIDA\";\n    try {\n      const referenceTime = new Date();\n      let alertDate;\n      if (typeof timeStamp === 'string') {\n        const [datePart, timePart] = timeStamp.split(' ');\n        const [year, month, day] = datePart.split('-').map(Number);\n        const [hours, minutes, seconds] = timePart.split(':').map(Number);\n        alertDate = new Date(year, month - 1, day, hours, minutes, seconds);\n      } else if (timeStamp instanceof Date) {\n        alertDate = timeStamp;\n      } else {\n        alertDate = new Date(Number(timeStamp));\n      }\n      if (isNaN(alertDate.getTime())) {\n        console.error(\"No se pudo convertir a fecha válida:\", timeStamp);\n        return \"FECHA INVÁLIDA\";\n      }\n      const diffMs = Math.max(0, referenceTime - alertDate);\n      const diffSecs = Math.floor(diffMs / 1000);\n      const diffMins = Math.floor(diffSecs / 60);\n      const diffHours = Math.floor(diffMins / 60);\n      const diffDays = Math.floor(diffHours / 24);\n      const diffWeeks = Math.floor(diffDays / 7);\n      const diffMonths = Math.floor(diffDays / 30);\n      if (diffSecs < 60) {\n        return diffSecs <= 1 ? \"HACE UN SEGUNDO\" : `HACE ${diffSecs} SEGUNDOS`;\n      } else if (diffMins < 60) {\n        return diffMins === 1 ? \"HACE UN MINUTO\" : `HACE ${diffMins} MINUTOS`;\n      } else if (diffHours < 24) {\n        return diffHours === 1 ? \"HACE UNA HORA\" : `HACE ${diffHours} HORAS`;\n      } else if (diffDays < 7) {\n        return diffDays === 1 ? \"HACE UN DÍA\" : `HACE ${diffDays} DÍAS`;\n      } else if (diffWeeks < 4) {\n        return diffWeeks === 1 ? \"HACE UNA SEMANA\" : `HACE ${diffWeeks} SEMANAS`;\n      } else if (diffMonths < 12) {\n        return diffMonths === 1 ? \"HACE UN MES\" : `HACE ${diffMonths} MESES`;\n      } else {\n        const diffYears = Math.floor(diffMonths / 12);\n        return diffYears === 1 ? \"HACE UN AÑO\" : `HACE ${diffYears} AÑOS`;\n      }\n    } catch (error) {\n      console.error(\"Error al calcular tiempo transcurrido:\", error);\n      return \"FECHA DESCONOCIDA\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NavBar, {\n    ref: headerRef,\n    children: [/*#__PURE__*/_jsxDEV(LogoImg, {\n      src: logo,\n      alt: \"Logo\",\n      onClick: () => navigate(\"/\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavContent, {\n      children: /*#__PURE__*/_jsxDEV(Menu, {\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => navigate(\"/\"),\n          children: \"Inicio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => navigate(\"/dashboard\"),\n          children: \"Centro de monitoreo y control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => navigate(\"/historial\"),\n          children: \"Historial de datos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RightSection, {\n      children: isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(NotificationIconContainer, {\n          children: [/*#__PURE__*/_jsxDEV(UserName, {\n            children: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            src: notificationIcon,\n            alt: \"Notificaciones\",\n            onClick: handleNotificationIconClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(NotificationBadge, {\n            children: unreadCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 35\n          }, this), notificationMenuVisible && /*#__PURE__*/_jsxDEV(NotificationDropdown, {\n            className: \"dropdown-menu\",\n            children: [/*#__PURE__*/_jsxDEV(NotificationHeader, {\n              children: [\"Notificaciones\", unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: markAllAsRead,\n                style: {\n                  fontSize: '0.8rem',\n                  color: '#5a5a5a',\n                  cursor: 'pointer'\n                },\n                children: \"Marcar todas como le\\xEDdas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this), notifications.length > 0 ? notifications.map(notification => /*#__PURE__*/_jsxDEV(NotificationItem, {\n              onClick: () => handleNotificationClick(notification.id),\n              style: {\n                backgroundColor: notification.is_read ? 'transparent' : 'rgba(235, 245, 255, 0.5)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(NotificationTitle, {\n                children: [/*#__PURE__*/_jsxDEV(UnreadIndicator, {\n                  read: notification.is_read\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 25\n                }, this), notification.tipo]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(NotificationDescription, {\n                children: notification.descripcion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                style: {\n                  color: '#777',\n                  fontSize: '0.75rem'\n                },\n                children: getTimeElapsedDynamic(notification.time_alert)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 23\n              }, this)]\n            }, notification.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(NoNotifications, {\n              children: \"No tienes notificaciones\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          src: userIcon,\n          alt: \"Usuario\",\n          onClick: () => setMenuVisible(prev => !prev)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), menuVisible && /*#__PURE__*/_jsxDEV(DropdownMenu, {\n          className: \"dropdown-menu\",\n          children: [/*#__PURE__*/_jsxDEV(DropdownMenuItem, {\n            onClick: () => navigate(\"/editar-datos\"),\n            children: \"Editar datos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DropdownMenuItem, {\n            onClick: handleLogout,\n            children: \"Cerrar sesi\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(LoginButton, {\n        onClick: () => navigate(\"/login\"),\n        children: \"Iniciar sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"QrXBZm4gf+kyVAonJAUWeFVe4mY=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useLocation","logo","notificationIcon","userIcon","jwtDecode","axios","NavBar","LogoImg","NavContent","Menu","MenuItem","RightSection","IconButton","LoginButton","NotificationDropdown","NotificationItem","NotificationTitle","NotificationDescription","NoNotifications","DropdownMenu","DropdownMenuItem","NotificationHeader","NotificationBadge","UnreadIndicator","UserName","NotificationIconContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","setHeaderHeight","_s","headerRef","navigate","location","isAuthenticated","setIsAuthenticated","menuVisible","setMenuVisible","notificationMenuVisible","setNotificationMenuVisible","notifications","setNotifications","unreadCount","setUnreadCount","currentTime","setCurrentTime","Date","token","localStorage","getItem","username","userId","decoded","user","id","error","console","removeItem","POLLING_INTERVAL","current","offsetHeight","fetchNotifications","notificationInterval","setInterval","clearInterval","pathname","timerInterval","response","get","data","formattedNotifications","map","notif","id_notificacion","tipo","descripcion","time_alert","is_read","unreadNotifications","filter","length","setItem","JSON","stringify","toString","cachedNotifications","parse","parseInt","handleLogout","handleNotificationClick","notificationId","post","updatedNotifications","markAllAsRead","handleNotificationIconClick","prev","handleClickOutside","event","target","closest","matches","document","addEventListener","removeEventListener","getTimeElapsedDynamic","timeStamp","referenceTime","alertDate","datePart","timePart","split","year","month","day","Number","hours","minutes","seconds","isNaN","getTime","diffMs","Math","max","diffSecs","floor","diffMins","diffHours","diffDays","diffWeeks","diffMonths","diffYears","ref","children","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","style","fontSize","color","cursor","notification","backgroundColor","read","_c","$RefreshReg$"],"sources":["C:/Users/Roger/Documents/TT2_AVANCES/prototipo-gecko/frontend/src/components/Header.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport logo from \"../assets/logo.png\";\r\nimport notificationIcon from \"../assets/campana.png\";\r\nimport userIcon from \"../assets/usuario.png\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport axios from \"axios\";\r\n\r\nimport { \r\n  NavBar, \r\n  LogoImg, \r\n  NavContent, \r\n  Menu, \r\n  MenuItem, \r\n  RightSection, \r\n  IconButton, \r\n  LoginButton,\r\n  NotificationDropdown, \r\n  NotificationItem, \r\n  NotificationTitle,\r\n  NotificationDescription, \r\n  NoNotifications, \r\n  DropdownMenu, \r\n  DropdownMenuItem, \r\n  NotificationHeader, \r\n  NotificationBadge, \r\n  UnreadIndicator,\r\n  UserName,\r\n  NotificationIconContainer,\r\n} from \"./NavBarStyles\";\r\n\r\nconst Header = ({ setHeaderHeight = () => {} }) => {\r\n  const headerRef = useRef(null);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n  const [notificationMenuVisible, setNotificationMenuVisible] = useState(false);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  let username = '';\r\n  let userId = '';\r\n\r\n  if (token) {\r\n    try {\r\n      const decoded = jwtDecode(token);\r\n      username = decoded.user;\r\n      userId = decoded.id;\r\n    } catch (error) {\r\n      console.error(\"Error al decodificar token:\", error);\r\n      localStorage.removeItem(\"token\"); // Eliminar token inválido\r\n    }\r\n  }\r\n\r\n  // Configuración para el polling de notificaciones\r\n  const POLLING_INTERVAL = 30000; // 30 segundos para recargar notificaciones\r\n\r\n  // Efecto para actualizar la altura del header\r\n  useEffect(() => {\r\n    if (headerRef.current) {\r\n      setHeaderHeight(headerRef.current.offsetHeight);\r\n    }\r\n    \r\n    if (token) {\r\n      setIsAuthenticated(true);\r\n    } else {\r\n      setIsAuthenticated(false);\r\n    }\r\n  }, [token, setHeaderHeight]);\r\n\r\n  // Efecto para cargar notificaciones iniciales y configurar la actualización periódica\r\n  useEffect(() => {\r\n    if (isAuthenticated && userId) {\r\n      fetchNotifications();\r\n      \r\n      // Configurar intervalo para actualizar notificaciones periódicamente\r\n      const notificationInterval = setInterval(() => {\r\n        fetchNotifications();\r\n      }, POLLING_INTERVAL);\r\n      \r\n      return () => clearInterval(notificationInterval);\r\n    }\r\n  }, [isAuthenticated, userId, location.pathname]); // Agregado location.pathname para recargar en cambios de ruta\r\n\r\n  // Efecto para actualizar el tiempo actual\r\n  useEffect(() => {\r\n    const timerInterval = setInterval(() => setCurrentTime(new Date()), 1000);\r\n    return () => clearInterval(timerInterval);\r\n  }, []);\r\n\r\n  // Función para obtener notificaciones desde el servidor\r\n  const fetchNotifications = async () => {\r\n    if (!userId) return;\r\n    \r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/getNotificationsByUserId/${userId}`);\r\n      const data = response.data;\r\n      if (data.notifications) {\r\n        const formattedNotifications = data.notifications.map(notif => ({\r\n          id: notif.id_notificacion,\r\n          tipo: notif.tipo,\r\n          descripcion: notif.descripcion,\r\n          time_alert: notif.time_alert,\r\n          is_read: notif.is_read === 1 || notif.is_read === true,\r\n        }));\r\n        \r\n        // Guardar notificaciones en el estado local\r\n        setNotifications(formattedNotifications);\r\n        \r\n        // Calcular el número de notificaciones no leídas\r\n        const unreadNotifications = formattedNotifications.filter(notif => !notif.is_read);\r\n        setUnreadCount(unreadNotifications.length);\r\n        \r\n        // También guardar en localStorage para persistencia entre rutas\r\n        localStorage.setItem('notifications', JSON.stringify(formattedNotifications));\r\n        localStorage.setItem('unreadCount', unreadNotifications.length.toString());\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al obtener notificaciones:\", error);\r\n      \r\n      // En caso de error, intentar cargar desde localStorage\r\n      const cachedNotifications = localStorage.getItem('notifications');\r\n      if (cachedNotifications) {\r\n        setNotifications(JSON.parse(cachedNotifications));\r\n        setUnreadCount(parseInt(localStorage.getItem('unreadCount') || '0'));\r\n      }\r\n    }\r\n  };\r\n\r\n  // Al iniciar sesión, cargar desde localStorage mientras se obtienen los datos del servidor\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      const cachedNotifications = localStorage.getItem('notifications');\r\n      if (cachedNotifications) {\r\n        setNotifications(JSON.parse(cachedNotifications));\r\n        setUnreadCount(parseInt(localStorage.getItem('unreadCount') || '0'));\r\n      }\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"notifications\");\r\n    localStorage.removeItem(\"unreadCount\");\r\n    setIsAuthenticated(false);\r\n    setNotifications([]);\r\n    setUnreadCount(0);\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const handleNotificationClick = async (notificationId) => {\r\n    try {\r\n      // Actualizar en la base de datos\r\n      await axios.post(`http://localhost:5000/api/markNotificationAsRead/${notificationId}/${userId}`);\r\n      \r\n      // Actualizar el estado local\r\n      const updatedNotifications = notifications.map(notif =>\r\n        notif.id === notificationId ? { ...notif, is_read: true } : notif\r\n      );\r\n      \r\n      setNotifications(updatedNotifications);\r\n      \r\n      // Recalcular el contador de no leídas\r\n      const unreadNotifications = updatedNotifications.filter(notif => !notif.is_read);\r\n      setUnreadCount(unreadNotifications.length);\r\n      \r\n      // Actualizar el localStorage\r\n      localStorage.setItem('notifications', JSON.stringify(updatedNotifications));\r\n      localStorage.setItem('unreadCount', unreadNotifications.length.toString());\r\n      \r\n      setNotificationMenuVisible(false);\r\n    } catch (error) {\r\n      console.error(\"Error al marcar notificación como leída:\", error);\r\n    }\r\n  };\r\n\r\n  const markAllAsRead = async () => {\r\n    try {\r\n      // Actualizar en la base de datos\r\n      await axios.post(`http://localhost:5000/api/markAllNotificationsAsRead/${userId}`);\r\n      \r\n      // Actualizar estado local\r\n      const updatedNotifications = notifications.map(notif => ({ ...notif, is_read: true }));\r\n      setNotifications(updatedNotifications);\r\n      setUnreadCount(0);\r\n      \r\n      // Actualizar localStorage\r\n      localStorage.setItem('notifications', JSON.stringify(updatedNotifications));\r\n      localStorage.setItem('unreadCount', '0');\r\n    } catch (error) {\r\n      console.error(\"Error al marcar todas las notificaciones como leídas:\", error);\r\n    }\r\n  };\r\n\r\n  const handleNotificationIconClick = () => {\r\n    setNotificationMenuVisible(prev => !prev);\r\n    setMenuVisible(false);\r\n  };\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (notificationMenuVisible || menuVisible) {\r\n      if (!event.target.closest('.dropdown-menu') && \r\n          !event.target.matches('[alt=\"Notificaciones\"]') && \r\n          !event.target.matches('[alt=\"Usuario\"]')) {\r\n        setNotificationMenuVisible(false);\r\n        setMenuVisible(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside);\r\n    };\r\n  }, [notificationMenuVisible, menuVisible]);\r\n\r\n  const getTimeElapsedDynamic = (timeStamp) => {\r\n    if (!timeStamp) return \"FECHA DESCONOCIDA\";\r\n    \r\n    try {\r\n      const referenceTime = new Date();\r\n      let alertDate;\r\n\r\n      if (typeof timeStamp === 'string') {\r\n        const [datePart, timePart] = timeStamp.split(' ');\r\n        const [year, month, day] = datePart.split('-').map(Number);\r\n        const [hours, minutes, seconds] = timePart.split(':').map(Number);\r\n        alertDate = new Date(year, month - 1, day, hours, minutes, seconds);\r\n      } else if (timeStamp instanceof Date) {\r\n        alertDate = timeStamp;\r\n      } else {\r\n        alertDate = new Date(Number(timeStamp));\r\n      }\r\n\r\n      if (isNaN(alertDate.getTime())) {\r\n        console.error(\"No se pudo convertir a fecha válida:\", timeStamp);\r\n        return \"FECHA INVÁLIDA\";\r\n      }\r\n\r\n      const diffMs = Math.max(0, referenceTime - alertDate);\r\n      const diffSecs = Math.floor(diffMs / 1000);\r\n      const diffMins = Math.floor(diffSecs / 60);\r\n      const diffHours = Math.floor(diffMins / 60);\r\n      const diffDays = Math.floor(diffHours / 24);\r\n      const diffWeeks = Math.floor(diffDays / 7);\r\n      const diffMonths = Math.floor(diffDays / 30);\r\n\r\n      if (diffSecs < 60) {\r\n        return diffSecs <= 1 ? \"HACE UN SEGUNDO\" : `HACE ${diffSecs} SEGUNDOS`;\r\n      } else if (diffMins < 60) {\r\n        return diffMins === 1 ? \"HACE UN MINUTO\" : `HACE ${diffMins} MINUTOS`;\r\n      } else if (diffHours < 24) {\r\n        return diffHours === 1 ? \"HACE UNA HORA\" : `HACE ${diffHours} HORAS`;\r\n      } else if (diffDays < 7) {\r\n        return diffDays === 1 ? \"HACE UN DÍA\" : `HACE ${diffDays} DÍAS`;\r\n      } else if (diffWeeks < 4) {\r\n        return diffWeeks === 1 ? \"HACE UNA SEMANA\" : `HACE ${diffWeeks} SEMANAS`;\r\n      } else if (diffMonths < 12) {\r\n        return diffMonths === 1 ? \"HACE UN MES\" : `HACE ${diffMonths} MESES`;\r\n      } else {\r\n        const diffYears = Math.floor(diffMonths / 12);\r\n        return diffYears === 1 ? \"HACE UN AÑO\" : `HACE ${diffYears} AÑOS`;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al calcular tiempo transcurrido:\", error);\r\n      return \"FECHA DESCONOCIDA\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <NavBar ref={headerRef}>\r\n      <LogoImg src={logo} alt=\"Logo\" onClick={() => navigate(\"/\")} />\r\n      <NavContent>\r\n        <Menu>\r\n          <MenuItem onClick={() => navigate(\"/\")}>Inicio</MenuItem>\r\n          <MenuItem onClick={() => navigate(\"/dashboard\")}>Centro de monitoreo y control</MenuItem>\r\n          <MenuItem onClick={() => navigate(\"/historial\")}>Historial de datos</MenuItem>\r\n        </Menu>\r\n      </NavContent>\r\n      \r\n      <RightSection>\r\n        {isAuthenticated ? (\r\n          <>\r\n            <NotificationIconContainer>\r\n              <UserName>{username}</UserName>\r\n              <IconButton src={notificationIcon} alt=\"Notificaciones\" onClick={handleNotificationIconClick} />\r\n              {unreadCount > 0 && <NotificationBadge>{unreadCount}</NotificationBadge>}\r\n              {notificationMenuVisible && (\r\n                <NotificationDropdown className=\"dropdown-menu\">\r\n                  <NotificationHeader>\r\n                    Notificaciones\r\n                    {unreadCount > 0 && (\r\n                      <span onClick={markAllAsRead} style={{ fontSize: '0.8rem', color: '#5a5a5a', cursor: 'pointer' }}>\r\n                        Marcar todas como leídas\r\n                      </span>\r\n                    )}\r\n                  </NotificationHeader>\r\n                  {notifications.length > 0 ? notifications.map(notification => (\r\n                    <NotificationItem \r\n                      key={notification.id} \r\n                      onClick={() => handleNotificationClick(notification.id)}\r\n                      style={{ \r\n                        backgroundColor: notification.is_read ? 'transparent' : 'rgba(235, 245, 255, 0.5)' \r\n                      }}\r\n                    >\r\n                      <NotificationTitle>\r\n                        <UnreadIndicator read={notification.is_read} />\r\n                        {notification.tipo}\r\n                      </NotificationTitle>\r\n                      <NotificationDescription>{notification.descripcion}</NotificationDescription>\r\n                      <small style={{ color: '#777', fontSize: '0.75rem' }}>\r\n                        {getTimeElapsedDynamic(notification.time_alert)}\r\n                      </small>\r\n                    </NotificationItem>\r\n                  )) : (\r\n                    <NoNotifications>No tienes notificaciones</NoNotifications>\r\n                  )}\r\n                </NotificationDropdown>\r\n              )}\r\n            </NotificationIconContainer>\r\n\r\n            <IconButton src={userIcon} alt=\"Usuario\" onClick={() => setMenuVisible(prev => !prev)} />\r\n            {menuVisible && (\r\n              <DropdownMenu className=\"dropdown-menu\">\r\n                <DropdownMenuItem onClick={() => navigate(\"/editar-datos\")}>Editar datos</DropdownMenuItem>\r\n                <DropdownMenuItem onClick={handleLogout}>Cerrar sesión</DropdownMenuItem>\r\n              </DropdownMenu>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <LoginButton onClick={() => navigate(\"/login\")}>Iniciar sesión</LoginButton>\r\n        )}\r\n      </RightSection>\r\n    </NavBar>\r\n  );\r\n};\r\n\r\nexport default Header;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}