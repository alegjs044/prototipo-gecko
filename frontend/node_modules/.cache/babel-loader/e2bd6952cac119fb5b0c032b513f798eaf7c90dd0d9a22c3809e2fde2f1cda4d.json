{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roger\\\\Documents\\\\TT2_AVANCES\\\\prototipo-gecko\\\\frontend\\\\src\\\\pages\\\\historial.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport { Line } from \"react-chartjs-2\";\nimport styled from 'styled-components';\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"../components/Button\";\nimport { ArrowDown } from \"lucide-react\";\nimport { jsPDF } from \"jspdf\";\n\n// Contenedor principal que alberga toda la interfaz\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 50px 30px;\n  margin: auto;\n  max-width: 1400px;         /* Ancho máximo del contenedor - AJUSTABLE */\n  background: #f8f4e1;\n  border-radius: 20px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  min-height: 85vh;          /* Altura mínima - AJUSTABLE */\n`;\n\n// Componente para crear columnas flexibles\n_c = Container;\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\n// Componente base para crear filas flexibles\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  gap: 20px;\n  padding: 20px;             /* Padding de las filas - AJUSTABLE */\n  margin: auto;\n  width: 100%;\n  border-radius: 25px;\n`;\n\n// Fila específica para los controles (selector y botón)\nconst ControlsRow = styled(Row)`\n  background: transparent;\n  justify-content: flex-start;\n  gap: 15px;\n  padding: 10px 20px;        /* Padding reducido - AJUSTABLE */\n`;\n\n// Fila para el contenido principal (tabla y gráfica)\n_c2 = ControlsRow;\nconst ContentRow = styled(Row)`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  gap: 30px;                 /* Espacio entre tabla y gráfica - AJUSTABLE */\n  \n  @media (max-width: 1200px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\n// Selector de categorías (Temperatura, Humedad, Iluminación)\nconst CategorySelect = styled.select`\n  padding: 12px 15px;\n  border-radius: 25px;\n  border: 1px solid #ddd;\n  background-color: white;\n  width: 300px;\n  font-size: 16px;\n  appearance: none;\n  background-image: url(\"data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e\");\n  background-repeat: no-repeat;\n  background-position: right 1rem center;\n  background-size: 1em;\n  \n  &:focus {\n    outline: none;\n    border-color: #B4864D;\n  }\n`;\n\n// Contenedor para los botones de la derecha\n_c3 = CategorySelect;\nconst RightButtonsContainer = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n\n// Botón rojo de búsqueda\n_c4 = RightButtonsContainer;\nconst SearchButton = styled.button`\n  background-color: #E74C3C;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  padding: 8px 20px;\n  font-weight: bold;\n  cursor: pointer;\n  text-transform: uppercase;\n  font-size: 14px;\n  \n  &:hover {\n    background-color: #C0392B;\n  }\n`;\n\n// Botón para descargar la tabla de datos\n_c5 = SearchButton;\nconst DownloadButton = styled.button`\n  background-color: white;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  padding: 8px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  &:hover {\n    background-color: #f5f5f5;\n  }\n`;\n\n// Panel para contener la tabla o la gráfica\n_c6 = DownloadButton;\nconst DataPanel = styled.div`\n  background: rgba(123, 95, 61, 0.8);\n  box-shadow: inset -5px -5px 10px rgba(238, 209, 146, 0.5), \n              10px 10px 20px rgba(245, 239, 230, 0.2);\n  backdrop-filter: blur(10000px);\n  filter: drop-shadow(5px 5px 10px rgba(248, 202, 132, 3));\n  border: 1px solid rgba(248, 216, 186, 0.25);\n  border-radius: 10px;\n  padding: 15px;\n  width: 47%;  /* Ligeramente reducido para asegurar que entren lado a lado */\n  min-width: 300px;\n  min-height: 450px;  /* Altura mínima para asegurar tamaños comparables */\n  max-height: 500px;\n  overflow: auto;\n  \n  @media (max-width: 1200px) {\n    width: 100%;\n    max-width: 500px;\n  }\n`;\n\n// Estilo de la tabla\n_c7 = DataPanel;\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  background-color: white;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\n// Estilo para las celdas de cabecera de la tabla\n_c8 = Table;\nconst Th = styled.th`\n  background-color: #f0f0f0;\n  color: #333;\n  padding: 8px;\n  text-align: center;\n  border: 1px solid #ddd;\n  font-size: 14px;\n`;\n\n// Estilo para las celdas de datos de la tabla\n_c9 = Th;\nconst Td = styled.td`\n  padding: 6px 8px;\n  text-align: center;\n  border: 1px solid #ddd;\n  font-size: 14px;\n`;\n\n// Contenedor para la gráfica\n_c10 = Td;\nconst ChartContainer = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  width: 100%;\n  height: 100%;\n  min-height: 300px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Estilo para mostrar el valor actual de la medición\n_c11 = ChartContainer;\nconst CurrentValue = styled.div`\n  text-align: center;\n  font-size: 3rem;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n\n// Título de la gráfica\n_c12 = CurrentValue;\nconst ChartTitle = styled.h3`\n  text-align: center;\n  background-color: #FF8C00;\n  color: white;\n  padding: 5px 15px;\n  border-radius: 4px;\n  margin: 0 auto 10px;\n  font-size: 16px;\n  display: inline-block;\n`;\n\n// Contenedor del título\n_c13 = ChartTitle;\nconst ChartTitleContainer = styled.div`\n  text-align: center;\n  margin-bottom: 5px;\n`;\n\n// Título principal (no utilizado actualmente)\n_c14 = ChartTitleContainer;\nconst Title = styled.h1`\n  text-align: center;\n  font-size: 2rem;           /* Tamaño de fuente - AJUSTABLE */\n  margin-bottom: 20px;       /* Margen inferior - AJUSTABLE */\n  color: #333;\n`;\n\n// Categorías disponibles para seleccionar\nconst categories = ['Temperatura', 'Iluminacion', 'Humedad'];\n\n// Datos de ejemplo para cada categoría\nconst initialData = {\n  Temperatura: [{\n    fecha: '01/02/2024',\n    dato: '29°C'\n  }, {\n    fecha: '02/02/2024',\n    dato: '30°C'\n  }, {\n    fecha: '03/02/2024',\n    dato: '30°C'\n  }, {\n    fecha: '04/02/2024',\n    dato: '31°C'\n  }, {\n    fecha: '05/02/2024',\n    dato: '31°C'\n  }, {\n    fecha: '06/02/2024',\n    dato: '31°C'\n  }, {\n    fecha: '07/02/2024',\n    dato: '31.5°C'\n  }, {\n    fecha: '08/02/2024',\n    dato: '31.5°C'\n  }, {\n    fecha: '09/02/2024',\n    dato: '31.5°C'\n  }, {\n    fecha: '10/02/2024',\n    dato: '32.5°C'\n  }, {\n    fecha: '11/02/2024',\n    dato: '32.5°C'\n  }, {\n    fecha: '12/02/2024',\n    dato: '32.5°C'\n  }, {\n    fecha: '13/02/2024',\n    dato: '32.5°C'\n  }, {\n    fecha: '14/02/2024',\n    dato: '33.5°C'\n  }, {\n    fecha: '15/02/2024',\n    dato: '33.5°C'\n  }, {\n    fecha: '16/02/2024',\n    dato: '33.5°C'\n  }, {\n    fecha: '17/02/2024',\n    dato: '33.5°C'\n  }, {\n    fecha: '18/02/2024',\n    dato: '34°C'\n  }],\n  Iluminacion: [{\n    fecha: '01/02/2024',\n    dato: '350 lux'\n  }, {\n    fecha: '02/02/2024',\n    dato: '340 lux'\n  }, {\n    fecha: '03/02/2024',\n    dato: '360 lux'\n  }, {\n    fecha: '04/02/2024',\n    dato: '370 lux'\n  }, {\n    fecha: '05/02/2024',\n    dato: '380 lux'\n  }, {\n    fecha: '06/02/2024',\n    dato: '390 lux'\n  }, {\n    fecha: '07/02/2024',\n    dato: '400 lux'\n  }, {\n    fecha: '08/02/2024',\n    dato: '410 lux'\n  }, {\n    fecha: '09/02/2024',\n    dato: '420 lux'\n  }, {\n    fecha: '10/02/2024',\n    dato: '430 lux'\n  }, {\n    fecha: '11/02/2024',\n    dato: '440 lux'\n  }, {\n    fecha: '12/02/2024',\n    dato: '450 lux'\n  }, {\n    fecha: '13/02/2024',\n    dato: '430 lux'\n  }, {\n    fecha: '14/02/2024',\n    dato: '420 lux'\n  }, {\n    fecha: '15/02/2024',\n    dato: '410 lux'\n  }, {\n    fecha: '16/02/2024',\n    dato: '400 lux'\n  }, {\n    fecha: '17/02/2024',\n    dato: '420 lux'\n  }, {\n    fecha: '18/02/2024',\n    dato: '430 lux'\n  }],\n  Humedad: [{\n    fecha: '01/02/2024',\n    dato: '60%'\n  }, {\n    fecha: '02/02/2024',\n    dato: '58%'\n  }, {\n    fecha: '03/02/2024',\n    dato: '62%'\n  }, {\n    fecha: '04/02/2024',\n    dato: '64%'\n  }, {\n    fecha: '05/02/2024',\n    dato: '63%'\n  }, {\n    fecha: '06/02/2024',\n    dato: '65%'\n  }, {\n    fecha: '07/02/2024',\n    dato: '67%'\n  }, {\n    fecha: '08/02/2024',\n    dato: '70%'\n  }, {\n    fecha: '09/02/2024',\n    dato: '68%'\n  }, {\n    fecha: '10/02/2024',\n    dato: '65%'\n  }, {\n    fecha: '11/02/2024',\n    dato: '63%'\n  }, {\n    fecha: '12/02/2024',\n    dato: '62%'\n  }, {\n    fecha: '13/02/2024',\n    dato: '60%'\n  }, {\n    fecha: '14/02/2024',\n    dato: '62%'\n  }, {\n    fecha: '15/02/2024',\n    dato: '64%'\n  }, {\n    fecha: '16/02/2024',\n    dato: '66%'\n  }, {\n    fecha: '17/02/2024',\n    dato: '63%'\n  }, {\n    fecha: '18/02/2024',\n    dato: '62%'\n  }]\n};\n\n/**\r\n * Prepara los datos para la gráfica Chart.js\r\n * @param {Array} data - Array de objetos con fecha y dato\r\n * @param {String} category - Categoría seleccionada\r\n * @returns {Object} Objeto formateado para Chart.js\r\n */\nconst prepareChartData = (data, category) => {\n  // Usar datos de ejemplo fijos que corresponden a la imagen\n  // Simulamos los datos de temperatura vistos en la imagen original\n  const fixedTemperatureData = [{\n    hora: '6 AM',\n    valor: 27.0\n  }, {\n    hora: '9 AM',\n    valor: 28.0\n  }, {\n    hora: '12 PM',\n    valor: 29.0\n  }, {\n    hora: '3 PM',\n    valor: 30.0\n  }, {\n    hora: '6 PM',\n    valor: 29.0\n  }, {\n    hora: '9 PM',\n    valor: 28.0\n  }];\n\n  // Simulamos datos para otras categorías\n  const fixedHumidityData = [{\n    hora: '6 AM',\n    valor: 60\n  }, {\n    hora: '9 AM',\n    valor: 63\n  }, {\n    hora: '12 PM',\n    valor: 67\n  }, {\n    hora: '3 PM',\n    valor: 70\n  }, {\n    hora: '6 PM',\n    valor: 65\n  }, {\n    hora: '9 PM',\n    valor: 62\n  }];\n  const fixedIlluminationData = [{\n    hora: '6 AM',\n    valor: 320\n  }, {\n    hora: '9 AM',\n    valor: 380\n  }, {\n    hora: '12 PM',\n    valor: 420\n  }, {\n    hora: '3 PM',\n    valor: 430\n  }, {\n    hora: '6 PM',\n    valor: 390\n  }, {\n    hora: '9 PM',\n    valor: 350\n  }];\n\n  // Seleccionar el conjunto de datos según la categoría\n  let dataToUse;\n  if (category === 'Temperatura') {\n    dataToUse = fixedTemperatureData;\n  } else if (category === 'Humedad') {\n    dataToUse = fixedHumidityData;\n  } else {\n    dataToUse = fixedIlluminationData;\n  }\n\n  // Preparar los datos para Chart.js\n  const chartData = {\n    labels: dataToUse.map(item => item.hora),\n    datasets: [{\n      label: category,\n      data: dataToUse.map(item => item.valor),\n      fill: false,\n      backgroundColor: 'rgba(255, 165, 0, 0.2)',\n      borderColor: '#FFA500',\n      borderWidth: 3,\n      tension: 0.3,\n      pointBackgroundColor: '#FFA500',\n      pointBorderColor: '#FFF',\n      pointBorderWidth: 2,\n      pointRadius: 5,\n      pointHoverRadius: 7\n    }]\n  };\n  return chartData;\n};\n\n// Opciones de configuración para la gráfica (MODIFICADAS)\nconst getChartOptions = category => {\n  // Determinar el rango según la categoría\n  let min, max, stepSize;\n  switch (category) {\n    case 'Temperatura':\n      min = 27.0;\n      max = 30.0;\n      stepSize = 0.5;\n      break;\n    case 'Humedad':\n      min = 55;\n      max = 75;\n      stepSize = 5;\n      break;\n    case 'Iluminacion':\n      min = 300;\n      max = 450;\n      stepSize = 50;\n      break;\n    default:\n      min = null;\n      max = null;\n      stepSize = null;\n  }\n  return {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function (context) {\n            let label = context.dataset.label || '';\n            if (label) {\n              label += ': ';\n            }\n            if (context.parsed.y !== null) {\n              label += context.parsed.y;\n              // Añadir unidad según la categoría\n              if (category === 'Temperatura') label += '°C';else if (category === 'Humedad') label += '%';else if (category === 'Iluminacion') label += ' lux';\n            }\n            return label;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        grid: {\n          display: true,\n          color: '#CCCCCC',\n          drawBorder: true\n        },\n        ticks: {\n          font: {\n            size: 12\n          }\n        },\n        title: {\n          display: true,\n          text: 'Tiempo',\n          font: {\n            size: 14\n          }\n        }\n      },\n      y: {\n        display: true,\n        grid: {\n          display: true,\n          color: '#CCCCCC',\n          drawBorder: true\n        },\n        min: min,\n        max: max,\n        ticks: {\n          stepSize: stepSize,\n          font: {\n            size: 12\n          }\n        },\n        title: {\n          display: true,\n          text: category,\n          font: {\n            size: 14\n          }\n        }\n      }\n    },\n    elements: {\n      point: {\n        radius: 5,\n        hoverRadius: 7,\n        borderWidth: 2\n      },\n      line: {\n        tension: 0.3,\n        borderWidth: 3\n      }\n    },\n    layout: {\n      padding: {\n        top: 5,\n        right: 20,\n        bottom: 20,\n        left: 20\n      }\n    }\n  };\n};\n\n/**\r\n * Componente principal para la visualización del historial de datos\r\n */\nfunction Historial() {\n  _s();\n  // Estado para la categoría seleccionada (Temperatura, Humedad, Iluminación)\n  const [selectedCategory, setSelectedCategory] = useState(categories[0]);\n\n  // Estado para los datos filtrados según la categoría seleccionada\n  const [filteredData, setFilteredData] = useState(initialData[selectedCategory]);\n\n  // Estado para los datos de la gráfica\n  const [chartData, setChartData] = useState(null);\n\n  // Estado para el valor actual a mostrar prominentemente\n  const [currentValue, setCurrentValue] = useState('');\n\n  // Estado para las opciones de la gráfica\n  const [chartOptions, setChartOptions] = useState(getChartOptions(categories[0]));\n\n  // Unidades según la categoría seleccionada\n  const unidades = {\n    'Temperatura': '°C',\n    'Humedad': '%',\n    'Iluminacion': 'lux'\n  };\n\n  // Efecto para actualizar los datos cuando cambia la categoría\n  useEffect(() => {\n    // Actualiza los datos de la tabla\n    setFilteredData(initialData[selectedCategory]);\n\n    // Prepara los datos para la gráfica\n    setChartData(prepareChartData(initialData[selectedCategory], selectedCategory));\n\n    // Actualiza las opciones de la gráfica según la categoría\n    setChartOptions(getChartOptions(selectedCategory));\n\n    // Obtiene el valor más reciente para mostrar\n    const lastItem = initialData[selectedCategory][initialData[selectedCategory].length - 1];\n    setCurrentValue(lastItem.dato);\n  }, [selectedCategory]);\n\n  // Manejador para el cambio de categoría\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n  };\n\n  // Función para descargar la tabla como PDF\n  const downloadPDF = () => {\n    const doc = new jsPDF();\n    let y = 20;\n    doc.text(\"Tabla de Datos\", 20, y);\n    y += 10;\n\n    // Escribir los encabezados\n    doc.text(\"Fecha\", 20, y);\n    doc.text(\"Dato\", 80, y);\n    y += 10;\n\n    // Escribir los datos de la tabla\n    filteredData.forEach(item => {\n      doc.text(item.fecha, 20, y);\n      doc.text(item.dato, 80, y);\n      y += 10;\n    });\n\n    // Guardar como PDF\n    doc.save('tabla_datos.pdf');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      showUserIcon: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: 'center',\n          margin: '10px 0 30px'\n        },\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlsRow, {\n        children: [/*#__PURE__*/_jsxDEV(CategorySelect, {\n          onChange: handleCategoryChange,\n          value: selectedCategory,\n          children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category,\n            children: category\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RightButtonsContainer, {\n          children: [/*#__PURE__*/_jsxDEV(SearchButton, {\n            children: \"BUSCAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DownloadButton, {\n            onClick: downloadPDF,\n            children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          gap: '30px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(DataPanel, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(Th, {\n                  children: \"Fecha\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Th, {\n                  children: \"Dato\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: filteredData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(Td, {\n                  children: item.fecha\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  children: item.dato\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 595,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DataPanel, {\n          children: /*#__PURE__*/_jsxDEV(ChartContainer, {\n            children: [/*#__PURE__*/_jsxDEV(ChartTitleContainer, {\n              children: /*#__PURE__*/_jsxDEV(ChartTitle, {\n                children: selectedCategory\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CurrentValue, {\n              children: currentValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: '250px',\n                width: '100%',\n                flexGrow: 1\n              },\n              children: chartData && /*#__PURE__*/_jsxDEV(Line, {\n                data: chartData,\n                options: chartOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Historial, \"R5ePu8DKe4EfVqPS0gwefV6wjvE=\");\n_c15 = Historial;\nexport default Historial;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ControlsRow\");\n$RefreshReg$(_c3, \"CategorySelect\");\n$RefreshReg$(_c4, \"RightButtonsContainer\");\n$RefreshReg$(_c5, \"SearchButton\");\n$RefreshReg$(_c6, \"DownloadButton\");\n$RefreshReg$(_c7, \"DataPanel\");\n$RefreshReg$(_c8, \"Table\");\n$RefreshReg$(_c9, \"Th\");\n$RefreshReg$(_c10, \"Td\");\n$RefreshReg$(_c11, \"ChartContainer\");\n$RefreshReg$(_c12, \"CurrentValue\");\n$RefreshReg$(_c13, \"ChartTitle\");\n$RefreshReg$(_c14, \"ChartTitleContainer\");\n$RefreshReg$(_c15, \"Historial\");","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","Line","styled","useNavigate","Button","ArrowDown","jsPDF","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","Column","Row","ControlsRow","_c2","ContentRow","CategorySelect","select","_c3","RightButtonsContainer","_c4","SearchButton","button","_c5","DownloadButton","_c6","DataPanel","_c7","Table","table","_c8","Th","th","_c9","Td","td","_c10","ChartContainer","_c11","CurrentValue","_c12","ChartTitle","h3","_c13","ChartTitleContainer","_c14","Title","h1","categories","initialData","Temperatura","fecha","dato","Iluminacion","Humedad","prepareChartData","data","category","fixedTemperatureData","hora","valor","fixedHumidityData","fixedIlluminationData","dataToUse","chartData","labels","map","item","datasets","label","fill","backgroundColor","borderColor","borderWidth","tension","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointRadius","pointHoverRadius","getChartOptions","min","max","stepSize","responsive","maintainAspectRatio","plugins","legend","display","tooltip","mode","intersect","callbacks","context","dataset","parsed","y","scales","x","grid","color","drawBorder","ticks","font","size","title","text","elements","point","radius","hoverRadius","line","layout","padding","top","right","bottom","left","Historial","_s","selectedCategory","setSelectedCategory","filteredData","setFilteredData","setChartData","currentValue","setCurrentValue","chartOptions","setChartOptions","unidades","lastItem","length","handleCategoryChange","event","target","value","downloadPDF","doc","forEach","save","children","showUserIcon","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","margin","onChange","onClick","flexDirection","justifyContent","gap","width","index","height","flexGrow","options","_c15","$RefreshReg$"],"sources":["C:/Users/Roger/Documents/TT2_AVANCES/prototipo-gecko/frontend/src/pages/historial.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Button from \"../components/Button\";\r\nimport { ArrowDown } from \"lucide-react\";\r\nimport { jsPDF } from \"jspdf\";\r\n\r\n// Contenedor principal que alberga toda la interfaz\r\nconst Container = styled.div`\r\n  padding: 50px 30px;\r\n  margin: auto;\r\n  max-width: 1400px;         /* Ancho máximo del contenedor - AJUSTABLE */\r\n  background: #f8f4e1;\r\n  border-radius: 20px;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  min-height: 85vh;          /* Altura mínima - AJUSTABLE */\r\n`;\r\n\r\n// Componente para crear columnas flexibles\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n`;\r\n\r\n// Componente base para crear filas flexibles\r\nconst Row = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  gap: 20px;\r\n  padding: 20px;             /* Padding de las filas - AJUSTABLE */\r\n  margin: auto;\r\n  width: 100%;\r\n  border-radius: 25px;\r\n`;\r\n\r\n// Fila específica para los controles (selector y botón)\r\nconst ControlsRow = styled(Row)`\r\n  background: transparent;\r\n  justify-content: flex-start;\r\n  gap: 15px;\r\n  padding: 10px 20px;        /* Padding reducido - AJUSTABLE */\r\n`;\r\n\r\n// Fila para el contenido principal (tabla y gráfica)\r\nconst ContentRow = styled(Row)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: nowrap;\r\n  justify-content: space-between;\r\n  gap: 30px;                 /* Espacio entre tabla y gráfica - AJUSTABLE */\r\n  \r\n  @media (max-width: 1200px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\n// Selector de categorías (Temperatura, Humedad, Iluminación)\r\nconst CategorySelect = styled.select`\r\n  padding: 12px 15px;\r\n  border-radius: 25px;\r\n  border: 1px solid #ddd;\r\n  background-color: white;\r\n  width: 300px;\r\n  font-size: 16px;\r\n  appearance: none;\r\n  background-image: url(\"data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e\");\r\n  background-repeat: no-repeat;\r\n  background-position: right 1rem center;\r\n  background-size: 1em;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #B4864D;\r\n  }\r\n`;\r\n\r\n// Contenedor para los botones de la derecha\r\nconst RightButtonsContainer = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n`;\r\n\r\n// Botón rojo de búsqueda\r\nconst SearchButton = styled.button`\r\n  background-color: #E74C3C;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 8px 20px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n  font-size: 14px;\r\n  \r\n  &:hover {\r\n    background-color: #C0392B;\r\n  }\r\n`;\r\n\r\n// Botón para descargar la tabla de datos\r\nconst DownloadButton = styled.button`\r\n  background-color: white;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  padding: 8px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  &:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n`;\r\n\r\n// Panel para contener la tabla o la gráfica\r\nconst DataPanel = styled.div`\r\n  background: rgba(123, 95, 61, 0.8);\r\n  box-shadow: inset -5px -5px 10px rgba(238, 209, 146, 0.5), \r\n              10px 10px 20px rgba(245, 239, 230, 0.2);\r\n  backdrop-filter: blur(10000px);\r\n  filter: drop-shadow(5px 5px 10px rgba(248, 202, 132, 3));\r\n  border: 1px solid rgba(248, 216, 186, 0.25);\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  width: 47%;  /* Ligeramente reducido para asegurar que entren lado a lado */\r\n  min-width: 300px;\r\n  min-height: 450px;  /* Altura mínima para asegurar tamaños comparables */\r\n  max-height: 500px;\r\n  overflow: auto;\r\n  \r\n  @media (max-width: 1200px) {\r\n    width: 100%;\r\n    max-width: 500px;\r\n  }\r\n`;\r\n\r\n// Estilo de la tabla\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  background-color: white;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n`;\r\n\r\n// Estilo para las celdas de cabecera de la tabla\r\nconst Th = styled.th`\r\n  background-color: #f0f0f0;\r\n  color: #333;\r\n  padding: 8px;\r\n  text-align: center;\r\n  border: 1px solid #ddd;\r\n  font-size: 14px;\r\n`;\r\n\r\n// Estilo para las celdas de datos de la tabla\r\nconst Td = styled.td`\r\n  padding: 6px 8px;\r\n  text-align: center;\r\n  border: 1px solid #ddd;\r\n  font-size: 14px;\r\n`;\r\n\r\n// Contenedor para la gráfica\r\nconst ChartContainer = styled.div`\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 300px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Estilo para mostrar el valor actual de la medición\r\nconst CurrentValue = styled.div`\r\n  text-align: center;\r\n  font-size: 3rem;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\n// Título de la gráfica\r\nconst ChartTitle = styled.h3`\r\n  text-align: center;\r\n  background-color: #FF8C00;\r\n  color: white;\r\n  padding: 5px 15px;\r\n  border-radius: 4px;\r\n  margin: 0 auto 10px;\r\n  font-size: 16px;\r\n  display: inline-block;\r\n`;\r\n\r\n// Contenedor del título\r\nconst ChartTitleContainer = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\n// Título principal (no utilizado actualmente)\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  font-size: 2rem;           /* Tamaño de fuente - AJUSTABLE */\r\n  margin-bottom: 20px;       /* Margen inferior - AJUSTABLE */\r\n  color: #333;\r\n`;\r\n\r\n// Categorías disponibles para seleccionar\r\nconst categories = ['Temperatura', 'Iluminacion', 'Humedad'];\r\n\r\n// Datos de ejemplo para cada categoría\r\nconst initialData = {\r\n  Temperatura: [\r\n    { fecha: '01/02/2024', dato: '29°C' },\r\n    { fecha: '02/02/2024', dato: '30°C' },\r\n    { fecha: '03/02/2024', dato: '30°C' },\r\n    { fecha: '04/02/2024', dato: '31°C' },\r\n    { fecha: '05/02/2024', dato: '31°C' },\r\n    { fecha: '06/02/2024', dato: '31°C' },\r\n    { fecha: '07/02/2024', dato: '31.5°C' },\r\n    { fecha: '08/02/2024', dato: '31.5°C' },\r\n    { fecha: '09/02/2024', dato: '31.5°C' },\r\n    { fecha: '10/02/2024', dato: '32.5°C' },\r\n    { fecha: '11/02/2024', dato: '32.5°C' },\r\n    { fecha: '12/02/2024', dato: '32.5°C' },\r\n    { fecha: '13/02/2024', dato: '32.5°C' },\r\n    { fecha: '14/02/2024', dato: '33.5°C' },\r\n    { fecha: '15/02/2024', dato: '33.5°C' },\r\n    { fecha: '16/02/2024', dato: '33.5°C' },\r\n    { fecha: '17/02/2024', dato: '33.5°C' },\r\n    { fecha: '18/02/2024', dato: '34°C' },\r\n  ],\r\n  Iluminacion: [\r\n    { fecha: '01/02/2024', dato: '350 lux' },\r\n    { fecha: '02/02/2024', dato: '340 lux' },\r\n    { fecha: '03/02/2024', dato: '360 lux' },\r\n    { fecha: '04/02/2024', dato: '370 lux' },\r\n    { fecha: '05/02/2024', dato: '380 lux' },\r\n    { fecha: '06/02/2024', dato: '390 lux' },\r\n    { fecha: '07/02/2024', dato: '400 lux' },\r\n    { fecha: '08/02/2024', dato: '410 lux' },\r\n    { fecha: '09/02/2024', dato: '420 lux' },\r\n    { fecha: '10/02/2024', dato: '430 lux' },\r\n    { fecha: '11/02/2024', dato: '440 lux' },\r\n    { fecha: '12/02/2024', dato: '450 lux' },\r\n    { fecha: '13/02/2024', dato: '430 lux' },\r\n    { fecha: '14/02/2024', dato: '420 lux' },\r\n    { fecha: '15/02/2024', dato: '410 lux' },\r\n    { fecha: '16/02/2024', dato: '400 lux' },\r\n    { fecha: '17/02/2024', dato: '420 lux' },\r\n    { fecha: '18/02/2024', dato: '430 lux' },\r\n  ],\r\n  Humedad: [\r\n    { fecha: '01/02/2024', dato: '60%' },\r\n    { fecha: '02/02/2024', dato: '58%' },\r\n    { fecha: '03/02/2024', dato: '62%' },\r\n    { fecha: '04/02/2024', dato: '64%' },\r\n    { fecha: '05/02/2024', dato: '63%' },\r\n    { fecha: '06/02/2024', dato: '65%' },\r\n    { fecha: '07/02/2024', dato: '67%' },\r\n    { fecha: '08/02/2024', dato: '70%' },\r\n    { fecha: '09/02/2024', dato: '68%' },\r\n    { fecha: '10/02/2024', dato: '65%' },\r\n    { fecha: '11/02/2024', dato: '63%' },\r\n    { fecha: '12/02/2024', dato: '62%' },\r\n    { fecha: '13/02/2024', dato: '60%' },\r\n    { fecha: '14/02/2024', dato: '62%' },\r\n    { fecha: '15/02/2024', dato: '64%' },\r\n    { fecha: '16/02/2024', dato: '66%' },\r\n    { fecha: '17/02/2024', dato: '63%' },\r\n    { fecha: '18/02/2024', dato: '62%' },\r\n  ],\r\n};\r\n\r\n/**\r\n * Prepara los datos para la gráfica Chart.js\r\n * @param {Array} data - Array de objetos con fecha y dato\r\n * @param {String} category - Categoría seleccionada\r\n * @returns {Object} Objeto formateado para Chart.js\r\n */\r\nconst prepareChartData = (data, category) => {\r\n  // Usar datos de ejemplo fijos que corresponden a la imagen\r\n  // Simulamos los datos de temperatura vistos en la imagen original\r\n  const fixedTemperatureData = [\r\n    { hora: '6 AM', valor: 27.0 },\r\n    { hora: '9 AM', valor: 28.0 },\r\n    { hora: '12 PM', valor: 29.0 },\r\n    { hora: '3 PM', valor: 30.0 },\r\n    { hora: '6 PM', valor: 29.0 },\r\n    { hora: '9 PM', valor: 28.0 }\r\n  ];\r\n  \r\n  // Simulamos datos para otras categorías\r\n  const fixedHumidityData = [\r\n    { hora: '6 AM', valor: 60 },\r\n    { hora: '9 AM', valor: 63 },\r\n    { hora: '12 PM', valor: 67 },\r\n    { hora: '3 PM', valor: 70 },\r\n    { hora: '6 PM', valor: 65 },\r\n    { hora: '9 PM', valor: 62 }\r\n  ];\r\n  \r\n  const fixedIlluminationData = [\r\n    { hora: '6 AM', valor: 320 },\r\n    { hora: '9 AM', valor: 380 },\r\n    { hora: '12 PM', valor: 420 },\r\n    { hora: '3 PM', valor: 430 },\r\n    { hora: '6 PM', valor: 390 },\r\n    { hora: '9 PM', valor: 350 }\r\n  ];\r\n  \r\n  // Seleccionar el conjunto de datos según la categoría\r\n  let dataToUse;\r\n  if (category === 'Temperatura') {\r\n    dataToUse = fixedTemperatureData;\r\n  } else if (category === 'Humedad') {\r\n    dataToUse = fixedHumidityData;\r\n  } else {\r\n    dataToUse = fixedIlluminationData;\r\n  }\r\n  \r\n  // Preparar los datos para Chart.js\r\n  const chartData = {\r\n    labels: dataToUse.map(item => item.hora),\r\n    datasets: [\r\n      {\r\n        label: category,\r\n        data: dataToUse.map(item => item.valor),\r\n        fill: false,\r\n        backgroundColor: 'rgba(255, 165, 0, 0.2)',\r\n        borderColor: '#FFA500',\r\n        borderWidth: 3,\r\n        tension: 0.3,\r\n        pointBackgroundColor: '#FFA500',\r\n        pointBorderColor: '#FFF',\r\n        pointBorderWidth: 2,\r\n        pointRadius: 5,\r\n        pointHoverRadius: 7,\r\n      }\r\n    ]\r\n  };\r\n  \r\n  return chartData;\r\n};\r\n\r\n// Opciones de configuración para la gráfica (MODIFICADAS)\r\nconst getChartOptions = (category) => {\r\n  // Determinar el rango según la categoría\r\n  let min, max, stepSize;\r\n  \r\n  switch(category) {\r\n    case 'Temperatura':\r\n      min = 27.0;\r\n      max = 30.0;\r\n      stepSize = 0.5;\r\n      break;\r\n    case 'Humedad':\r\n      min = 55;\r\n      max = 75;\r\n      stepSize = 5;\r\n      break;\r\n    case 'Iluminacion':\r\n      min = 300;\r\n      max = 450;\r\n      stepSize = 50;\r\n      break;\r\n    default:\r\n      min = null;\r\n      max = null;\r\n      stepSize = null;\r\n  }\r\n\r\n  return {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false\r\n      },\r\n      tooltip: {\r\n        mode: 'index',\r\n        intersect: false,\r\n        callbacks: {\r\n          label: function(context) {\r\n            let label = context.dataset.label || '';\r\n            if (label) {\r\n              label += ': ';\r\n            }\r\n            if (context.parsed.y !== null) {\r\n              label += context.parsed.y;\r\n              // Añadir unidad según la categoría\r\n              if (category === 'Temperatura') label += '°C';\r\n              else if (category === 'Humedad') label += '%';\r\n              else if (category === 'Iluminacion') label += ' lux';\r\n            }\r\n            return label;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    scales: {\r\n      x: {\r\n        display: true,\r\n        grid: {\r\n          display: true,\r\n          color: '#CCCCCC',\r\n          drawBorder: true,\r\n        },\r\n        ticks: {\r\n          font: {\r\n            size: 12\r\n          }\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: 'Tiempo',\r\n          font: {\r\n            size: 14\r\n          }\r\n        }\r\n      },\r\n      y: {\r\n        display: true,\r\n        grid: {\r\n          display: true,\r\n          color: '#CCCCCC',\r\n          drawBorder: true,\r\n        },\r\n        min: min,\r\n        max: max,\r\n        ticks: {\r\n          stepSize: stepSize,\r\n          font: {\r\n            size: 12\r\n          }\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: category,\r\n          font: {\r\n            size: 14\r\n          }\r\n        }\r\n      }\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 5,\r\n        hoverRadius: 7,\r\n        borderWidth: 2\r\n      },\r\n      line: {\r\n        tension: 0.3,\r\n        borderWidth: 3,\r\n      }\r\n    },\r\n    layout: {\r\n      padding: {\r\n        top: 5,\r\n        right: 20,\r\n        bottom: 20,\r\n        left: 20\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n\r\n/**\r\n * Componente principal para la visualización del historial de datos\r\n */\r\nfunction Historial() {\r\n  // Estado para la categoría seleccionada (Temperatura, Humedad, Iluminación)\r\n  const [selectedCategory, setSelectedCategory] = useState(categories[0]);\r\n  \r\n  // Estado para los datos filtrados según la categoría seleccionada\r\n  const [filteredData, setFilteredData] = useState(initialData[selectedCategory]);\r\n  \r\n  // Estado para los datos de la gráfica\r\n  const [chartData, setChartData] = useState(null);\r\n  \r\n  // Estado para el valor actual a mostrar prominentemente\r\n  const [currentValue, setCurrentValue] = useState('');\r\n  \r\n  // Estado para las opciones de la gráfica\r\n  const [chartOptions, setChartOptions] = useState(getChartOptions(categories[0]));\r\n  \r\n  // Unidades según la categoría seleccionada\r\n  const unidades = {\r\n    'Temperatura': '°C',\r\n    'Humedad': '%',\r\n    'Iluminacion': 'lux'\r\n  };\r\n\r\n  // Efecto para actualizar los datos cuando cambia la categoría\r\n  useEffect(() => {\r\n    // Actualiza los datos de la tabla\r\n    setFilteredData(initialData[selectedCategory]);\r\n    \r\n    // Prepara los datos para la gráfica\r\n    setChartData(prepareChartData(initialData[selectedCategory], selectedCategory));\r\n    \r\n    // Actualiza las opciones de la gráfica según la categoría\r\n    setChartOptions(getChartOptions(selectedCategory));\r\n    \r\n    // Obtiene el valor más reciente para mostrar\r\n    const lastItem = initialData[selectedCategory][initialData[selectedCategory].length - 1];\r\n    setCurrentValue(lastItem.dato);\r\n  }, [selectedCategory]);\r\n\r\n  // Manejador para el cambio de categoría\r\n  const handleCategoryChange = (event) => {\r\n    setSelectedCategory(event.target.value);\r\n  };\r\n\r\n  // Función para descargar la tabla como PDF\r\n  const downloadPDF = () => {\r\n    const doc = new jsPDF();\r\n    let y = 20;\r\n    doc.text(\"Tabla de Datos\", 20, y);\r\n    y += 10;\r\n\r\n    // Escribir los encabezados\r\n    doc.text(\"Fecha\", 20, y);\r\n    doc.text(\"Dato\", 80, y);\r\n    y += 10;\r\n\r\n    // Escribir los datos de la tabla\r\n    filteredData.forEach(item => {\r\n      doc.text(item.fecha, 20, y);\r\n      doc.text(item.dato, 80, y);\r\n      y += 10;\r\n    });\r\n\r\n  // Guardar como PDF\r\n  doc.save('tabla_datos.pdf');\r\n};\r\n\r\n  return (\r\n    <>\r\n      {/* Cabecera de la aplicación */}\r\n      <Header showUserIcon={true} />\r\n      \r\n      {/* Contenedor principal */}\r\n      <Container>\r\n        {/* Título */}\r\n        <h1 style={{ textAlign: 'center', margin: '10px 0 30px' }}> </h1>\r\n        \r\n        {/* Fila de controles: selector de categoría y botones */}\r\n        <ControlsRow>\r\n          <CategorySelect onChange={handleCategoryChange} value={selectedCategory}>\r\n            {categories.map((category) => (\r\n              <option key={category} value={category}>\r\n                {category}\r\n              </option>\r\n            ))}\r\n          </CategorySelect>\r\n          \r\n          <RightButtonsContainer>\r\n            <SearchButton>BUSCAR</SearchButton>\r\n            <DownloadButton onClick={downloadPDF}>\r\n              <ArrowDown size={24} />\r\n            </DownloadButton>\r\n          </RightButtonsContainer>\r\n        </ControlsRow>\r\n        \r\n        {/* Fila de contenido: tabla y gráfica */}\r\n        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', gap: '30px', width: '100%' }}>\r\n          {/* Panel izquierdo: Tabla de datos históricos */}\r\n          <DataPanel>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <Th>Fecha</Th>\r\n                  <Th>Dato</Th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredData.map((item, index) => (\r\n                  <tr key={index}>\r\n                    <Td>{item.fecha}</Td>\r\n                    <Td>{item.dato}</Td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </DataPanel>\r\n          \r\n          {/* Panel derecho: Gráfica y valor actual */}\r\n          <DataPanel>\r\n            <ChartContainer>\r\n              {/* Título de la gráfica (categoría seleccionada) */}\r\n              <ChartTitleContainer>\r\n                <ChartTitle>{selectedCategory}</ChartTitle>\r\n              </ChartTitleContainer>\r\n              \r\n              {/* Valor actual */}\r\n              <CurrentValue>{currentValue}</CurrentValue>\r\n              \r\n              {/* Contenedor para la gráfica con espacio suficiente para ejes y etiquetas */}\r\n              <div style={{ height: '250px', width: '100%', flexGrow: 1 }}>\r\n                {chartData && <Line data={chartData} options={chartOptions} />}\r\n              </div>\r\n            </ChartContainer>\r\n          </DataPanel>\r\n        </div>\r\n      </Container>\r\n      \r\n      {/* Pie de página */}\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Historial;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,KAAK,QAAQ,OAAO;;AAE7B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,SAAS,GAAGT,MAAM,CAACU,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,EAAA,GAbMF,SAAS;AAcf,MAAMG,MAAM,GAAGZ,MAAM,CAACU,GAAG;AACzB;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMG,GAAG,GAAGb,MAAM,CAACU,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMI,WAAW,GAAGd,MAAM,CAACa,GAAG,CAAC;AAC/B;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAE,GAAA,GAPMD,WAAW;AAQjB,MAAME,UAAU,GAAGhB,MAAM,CAACa,GAAG,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMI,cAAc,GAAGjB,MAAM,CAACkB,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GAnBMF,cAAc;AAoBpB,MAAMG,qBAAqB,GAAGpB,MAAM,CAACU,GAAG;AACxC;AACA;AACA,CAAC;;AAED;AAAAW,GAAA,GALMD,qBAAqB;AAM3B,MAAME,YAAY,GAAGtB,MAAM,CAACuB,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GAhBMF,YAAY;AAiBlB,MAAMG,cAAc,GAAGzB,MAAM,CAACuB,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAG,GAAA,GAfMD,cAAc;AAgBpB,MAAME,SAAS,GAAG3B,MAAM,CAACU,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAkB,GAAA,GArBMD,SAAS;AAsBf,MAAME,KAAK,GAAG7B,MAAM,CAAC8B,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GARMF,KAAK;AASX,MAAMG,EAAE,GAAGhC,MAAM,CAACiC,EAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GATMF,EAAE;AAUR,MAAMG,EAAE,GAAGnC,MAAM,CAACoC,EAAE;AACpB;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,IAAA,GAPMF,EAAE;AAQR,MAAMG,cAAc,GAAGtC,MAAM,CAACU,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAA6B,IAAA,GAZMD,cAAc;AAapB,MAAME,YAAY,GAAGxC,MAAM,CAACU,GAAG;AAC/B;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAA+B,IAAA,GAPMD,YAAY;AAQlB,MAAME,UAAU,GAAG1C,MAAM,CAAC2C,EAAE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,IAAA,GAXMF,UAAU;AAYhB,MAAMG,mBAAmB,GAAG7C,MAAM,CAACU,GAAG;AACtC;AACA;AACA,CAAC;;AAED;AAAAoC,IAAA,GALMD,mBAAmB;AAMzB,MAAME,KAAK,GAAG/C,MAAM,CAACgD,EAAE;AACvB;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMC,UAAU,GA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}