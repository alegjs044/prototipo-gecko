{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roger\\\\Documents\\\\TT2_AVANCES\\\\prototipo-gecko\\\\frontend\\\\src\\\\pages\\\\historial.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport { Line } from \"react-chartjs-2\";\nimport styled from 'styled-components';\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"../components/Button\";\nimport { ArrowDown } from \"lucide-react\";\nimport { jsPDF } from \"jspdf\";\nimport axios from \"axios\";\n\n// Contenedor principal que alberga toda la interfaz\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 50px 30px;\n  margin: auto;\n  max-width: 1400px;         /* Ancho máximo del contenedor - AJUSTABLE */\n  background: #f8f4e1;\n  border-radius: 20px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  min-height: 85vh;          /* Altura mínima - AJUSTABLE */\n`;\n\n// Componente para crear columnas flexibles\n_c = Container;\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\n// Componente base para crear filas flexibles\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  gap: 20px;\n  padding: 20px;             /* Padding de las filas - AJUSTABLE */\n  margin: auto;\n  width: 100%;\n  border-radius: 25px;\n`;\n\n// Fila específica para los controles (selector y botón)\nconst ControlsRow = styled(Row)`\n  background: transparent;\n  justify-content: flex-start;\n  gap: 15px;\n  padding: 10px 20px;        /* Padding reducido - AJUSTABLE */\n`;\n\n// Fila para el contenido principal (tabla y gráfica)\n_c2 = ControlsRow;\nconst ContentRow = styled(Row)`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  gap: 30px;                 /* Espacio entre tabla y gráfica - AJUSTABLE */\n  \n  @media (max-width: 1200px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\n// Selector de categorías (Temperatura, Humedad, Iluminación)\nconst CategorySelect = styled.select`\n  padding: 12px 15px;\n  border-radius: 25px;\n  border: 1px solid #ddd;\n  background-color: white;\n  width: 300px;\n  font-size: 16px;\n  appearance: none;\n  background-image: url(\"data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e\");\n  background-repeat: no-repeat;\n  background-position: right 1rem center;\n  background-size: 1em;\n  \n  &:focus {\n    outline: none;\n    border-color: #B4864D;\n  }\n`;\n\n// Contenedor para los botones de la derecha\n_c3 = CategorySelect;\nconst RightButtonsContainer = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n\n// Botón rojo de búsqueda\n_c4 = RightButtonsContainer;\nconst SearchButton = styled.button`\n  background-color: #E74C3C;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  padding: 8px 20px;\n  font-weight: bold;\n  cursor: pointer;\n  text-transform: uppercase;\n  font-size: 14px;\n  \n  &:hover {\n    background-color: #C0392B;\n  }\n`;\n\n// Botón para descargar la tabla de datos\nconst DownloadButton = styled.button`\n  background-color: white;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  padding: 8px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  &:hover {\n    background-color: #f5f5f5;\n  }\n`;\n\n// Panel para contener la tabla o la gráfica\n_c5 = DownloadButton;\nconst DataPanel = styled.div`\n  background: rgba(123, 95, 61, 0.8);\n  box-shadow: inset -5px -5px 10px rgba(238, 209, 146, 0.5), \n              10px 10px 20px rgba(245, 239, 230, 0.2);\n  backdrop-filter: blur(10000px);\n  filter: drop-shadow(5px 5px 10px rgba(248, 202, 132, 3));\n  border: 1px solid rgba(248, 216, 186, 0.25);\n  border-radius: 10px;\n  padding: 15px;\n  width: 47%;  /* Ligeramente reducido para asegurar que entren lado a lado */\n  min-width: 300px;\n  min-height: 450px;  /* Altura mínima para asegurar tamaños comparables */\n  max-height: 500px;\n  overflow: auto;\n  \n  @media (max-width: 1200px) {\n    width: 100%;\n    max-width: 500px;\n  }\n`;\n\n// Estilo de la tabla\n_c6 = DataPanel;\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  background-color: white;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\n// Estilo para las celdas de cabecera de la tabla\n_c7 = Table;\nconst Th = styled.th`\n  background-color: #f0f0f0;\n  color: #333;\n  padding: 8px;\n  text-align: center;\n  border: 1px solid #ddd;\n  font-size: 14px;\n`;\n\n// Estilo para las celdas de datos de la tabla\n_c8 = Th;\nconst Td = styled.td`\n  padding: 6px 8px;\n  text-align: center;\n  border: 1px solid #ddd;\n  font-size: 14px;\n`;\n\n// Contenedor para la gráfica\n_c9 = Td;\nconst ChartContainer = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;\n  width: 100%;\n  height: 100%;\n  min-height: 300px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Estilo para mostrar el valor actual de la medición\n_c10 = ChartContainer;\nconst CurrentValue = styled.div`\n  text-align: center;\n  font-size: 3rem;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n\n// Título de la gráfica\n_c11 = CurrentValue;\nconst ChartTitle = styled.h3`\n  text-align: center;\n  background-color: #FF8C00;\n  color: white;\n  padding: 5px 15px;\n  border-radius: 4px;\n  margin: 0 auto 10px;\n  font-size: 16px;\n  display: inline-block;\n`;\n\n// Contenedor del título\n_c12 = ChartTitle;\nconst ChartTitleContainer = styled.div`\n  text-align: center;\n  margin-bottom: 5px;\n`;\n\n// Título principal (no utilizado actualmente)\n_c13 = ChartTitleContainer;\nconst Title = styled.h1`\n  text-align: center;\n  font-size: 2rem;           /* Tamaño de fuente - AJUSTABLE */\n  margin-bottom: 20px;       /* Margen inferior - AJUSTABLE */\n  color: #333;\n`;\n\n// Categorías disponibles para seleccionar\nconst categories = ['Temperatura', 'Iluminacion', 'Humedad'];\n\n// Datos de ejemplo para cada categoría (sólo para Iluminación y Humedad)\nconst initialData = {\n  Iluminacion: [{\n    fecha: '01/02/2024',\n    dato: '350 lux'\n  }, {\n    fecha: '02/02/2024',\n    dato: '340 lux'\n  }, {\n    fecha: '03/02/2024',\n    dato: '360 lux'\n  }, {\n    fecha: '04/02/2024',\n    dato: '370 lux'\n  }, {\n    fecha: '05/02/2024',\n    dato: '380 lux'\n  }, {\n    fecha: '06/02/2024',\n    dato: '390 lux'\n  }, {\n    fecha: '07/02/2024',\n    dato: '400 lux'\n  }, {\n    fecha: '08/02/2024',\n    dato: '410 lux'\n  }, {\n    fecha: '09/02/2024',\n    dato: '420 lux'\n  }, {\n    fecha: '10/02/2024',\n    dato: '430 lux'\n  }, {\n    fecha: '11/02/2024',\n    dato: '440 lux'\n  }, {\n    fecha: '12/02/2024',\n    dato: '450 lux'\n  }, {\n    fecha: '13/02/2024',\n    dato: '430 lux'\n  }, {\n    fecha: '14/02/2024',\n    dato: '420 lux'\n  }, {\n    fecha: '15/02/2024',\n    dato: '410 lux'\n  }, {\n    fecha: '16/02/2024',\n    dato: '400 lux'\n  }, {\n    fecha: '17/02/2024',\n    dato: '420 lux'\n  }, {\n    fecha: '18/02/2024',\n    dato: '430 lux'\n  }],\n  Humedad: [{\n    fecha: '01/02/2024',\n    dato: '60%'\n  }, {\n    fecha: '02/02/2024',\n    dato: '58%'\n  }, {\n    fecha: '03/02/2024',\n    dato: '62%'\n  }, {\n    fecha: '04/02/2024',\n    dato: '64%'\n  }, {\n    fecha: '05/02/2024',\n    dato: '63%'\n  }, {\n    fecha: '06/02/2024',\n    dato: '65%'\n  }, {\n    fecha: '07/02/2024',\n    dato: '67%'\n  }, {\n    fecha: '08/02/2024',\n    dato: '70%'\n  }, {\n    fecha: '09/02/2024',\n    dato: '68%'\n  }, {\n    fecha: '10/02/2024',\n    dato: '65%'\n  }, {\n    fecha: '11/02/2024',\n    dato: '63%'\n  }, {\n    fecha: '12/02/2024',\n    dato: '62%'\n  }, {\n    fecha: '13/02/2024',\n    dato: '60%'\n  }, {\n    fecha: '14/02/2024',\n    dato: '62%'\n  }, {\n    fecha: '15/02/2024',\n    dato: '64%'\n  }, {\n    fecha: '16/02/2024',\n    dato: '66%'\n  }, {\n    fecha: '17/02/2024',\n    dato: '63%'\n  }, {\n    fecha: '18/02/2024',\n    dato: '62%'\n  }]\n};\n\n/**\r\n * Función para formatear la fecha de la base de datos a formato de visualización\r\n * @param {String} dateTimeString - Fecha en formato ISO de la BD\r\n * @returns {String} Fecha formateada como DD/MM/YYYY\r\n */\nconst formatDate = dateTimeString => {\n  const date = new Date(dateTimeString);\n  return `${date.getDate().toString().padStart(2, '0')}/${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getFullYear()}`;\n};\n\n/**\r\n * Prepara los datos para la gráfica Chart.js\r\n * @param {Array} data - Array de objetos con datos\r\n * @param {String} category - Categoría seleccionada\r\n * @returns {Object} Objeto formateado para Chart.js\r\n */\nconst prepareChartData = (data, category) => {\n  if (category === 'Temperatura' && Array.isArray(data) && data.length > 0) {\n    // Usar solo los últimos 6 registros para la gráfica (o menos si hay menos de 6)\n    const lastSixData = data.slice(0, Math.min(6, data.length)).reverse();\n\n    // Extraer horas de los timestamps para etiquetas\n    const labels = lastSixData.map(item => {\n      const date = new Date(item.Marca_tiempo);\n      return `${date.getHours()}:${date.getMinutes().toString().padStart(2, '0')}`;\n    });\n\n    // Extraer valores para los datos\n    const values = lastSixData.map(item => parseFloat(item.Medicion));\n    return {\n      labels: labels,\n      datasets: [{\n        label: category,\n        data: values,\n        fill: false,\n        backgroundColor: 'rgba(255, 165, 0, 0.2)',\n        borderColor: '#FFA500',\n        borderWidth: 3,\n        tension: 0.3,\n        pointBackgroundColor: '#FFA500',\n        pointBorderColor: '#FFF',\n        pointBorderWidth: 2,\n        pointRadius: 5,\n        pointHoverRadius: 7\n      }]\n    };\n  } else {\n    // Usar datos fijos para otras categorías\n    const fixedHumidityData = [{\n      hora: '6 AM',\n      valor: 60\n    }, {\n      hora: '9 AM',\n      valor: 63\n    }, {\n      hora: '12 PM',\n      valor: 67\n    }, {\n      hora: '3 PM',\n      valor: 70\n    }, {\n      hora: '6 PM',\n      valor: 65\n    }, {\n      hora: '9 PM',\n      valor: 62\n    }];\n    const fixedIlluminationData = [{\n      hora: '6 AM',\n      valor: 320\n    }, {\n      hora: '9 AM',\n      valor: 380\n    }, {\n      hora: '12 PM',\n      valor: 420\n    }, {\n      hora: '3 PM',\n      valor: 430\n    }, {\n      hora: '6 PM',\n      valor: 390\n    }, {\n      hora: '9 PM',\n      valor: 350\n    }];\n\n    // Seleccionar el conjunto de datos según la categoría\n    let dataToUse = category === 'Humedad' ? fixedHumidityData : fixedIlluminationData;\n\n    // Preparar los datos para Chart.js\n    return {\n      labels: dataToUse.map(item => item.hora),\n      datasets: [{\n        label: category,\n        data: dataToUse.map(item => item.valor),\n        fill: false,\n        backgroundColor: 'rgba(255, 165, 0, 0.2)',\n        borderColor: '#FFA500',\n        borderWidth: 3,\n        tension: 0.3,\n        pointBackgroundColor: '#FFA500',\n        pointBorderColor: '#FFF',\n        pointBorderWidth: 2,\n        pointRadius: 5,\n        pointHoverRadius: 7\n      }]\n    };\n  }\n};\n\n// Opciones de configuración para la gráfica\nconst getChartOptions = category => {\n  // Determinar el rango según la categoría\n  let min, max, stepSize;\n  switch (category) {\n    case 'Temperatura':\n      min = 20.0; // Ajustado para mostrar valores más bajos\n      max = 35.0; // Ajustado para mostrar valores más altos\n      stepSize = 2.5;\n      break;\n    case 'Humedad':\n      min = 55;\n      max = 75;\n      stepSize = 5;\n      break;\n    case 'Iluminacion':\n      min = 300;\n      max = 450;\n      stepSize = 50;\n      break;\n    default:\n      min = null;\n      max = null;\n      stepSize = null;\n  }\n  return {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function (context) {\n            let label = context.dataset.label || '';\n            if (label) {\n              label += ': ';\n            }\n            if (context.parsed.y !== null) {\n              label += context.parsed.y;\n              // Añadir unidad según la categoría\n              if (category === 'Temperatura') label += '°C';else if (category === 'Humedad') label += '%';else if (category === 'Iluminacion') label += ' lux';\n            }\n            return label;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        grid: {\n          display: true,\n          color: '#CCCCCC',\n          drawBorder: true\n        },\n        ticks: {\n          font: {\n            size: 12\n          }\n        },\n        title: {\n          display: true,\n          text: 'Tiempo',\n          font: {\n            size: 14\n          }\n        }\n      },\n      y: {\n        display: true,\n        grid: {\n          display: true,\n          color: '#CCCCCC',\n          drawBorder: true\n        },\n        min: min,\n        max: max,\n        ticks: {\n          stepSize: stepSize,\n          font: {\n            size: 12\n          }\n        },\n        title: {\n          display: true,\n          text: category,\n          font: {\n            size: 14\n          }\n        }\n      }\n    },\n    elements: {\n      point: {\n        radius: 5,\n        hoverRadius: 7,\n        borderWidth: 2\n      },\n      line: {\n        tension: 0.3,\n        borderWidth: 3\n      }\n    },\n    layout: {\n      padding: {\n        top: 5,\n        right: 20,\n        bottom: 20,\n        left: 20\n      }\n    }\n  };\n};\n\n/**\r\n * Componente principal para la visualización del historial de datos\r\n */\nfunction Historial() {\n  _s();\n  // Estado para la búsqueda\n  const [search, setSearch] = useState('');\n\n  // Estado para la categoría seleccionada\n  const [selectedCategory, setSelectedCategory] = useState(categories[0]);\n\n  // Estado para los datos de temperatura desde la API\n  const [temperatureData, setTemperatureData] = useState([]);\n\n  // Estado para los datos filtrados según la categoría seleccionada\n  const [filteredData, setFilteredData] = useState([]);\n\n  // Estado para los datos de la gráfica\n  const [chartData, setChartData] = useState(null);\n\n  // Estado para el valor actual a mostrar prominentemente\n  const [currentValue, setCurrentValue] = useState('');\n\n  // Estado para las opciones de la gráfica\n  const [chartOptions, setChartOptions] = useState(getChartOptions(categories[0]));\n\n  // Estado para controlar errores de carga\n  const [error, setError] = useState(null);\n\n  // Estado para controlar carga de datos\n  const [loading, setLoading] = useState(true);\n\n  // Unidades según la categoría seleccionada\n  const unidades = {\n    'Temperatura': '°C',\n    'Humedad': '%',\n    'Iluminacion': 'lux'\n  };\n  const navigate = useNavigate();\n\n  // Verificar autenticación\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n\n  // Cargar datos de temperatura desde la API\n  useEffect(() => {\n    const fetchTemperatureData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get('http://localhost:5000/api/temperatura');\n\n        // Verificar si hay datos\n        if (response.data && response.data.length > 0) {\n          // Procesar datos de temperatura para el formato esperado por la tabla\n          const formattedData = response.data.map(item => ({\n            fecha: formatDate(item.Marca_tiempo),\n            dato: `${item.Medicion}°C`,\n            zona: item.Zona,\n            raw: item // Guardamos el objeto original para uso posterior\n          }));\n          setTemperatureData(formattedData);\n        } else {\n          setTemperatureData([]);\n        }\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error al cargar datos de temperatura:\", err);\n        setError(\"Error al cargar datos de temperatura. Por favor, intente de nuevo más tarde.\");\n        setLoading(false);\n      }\n    };\n    fetchTemperatureData();\n  }, []);\n\n  // Efecto para actualizar los datos cuando cambia la categoría o se cargan los datos de temperatura\n  useEffect(() => {\n    if (selectedCategory === 'Temperatura') {\n      // Usar datos reales de temperatura\n      setFilteredData(temperatureData);\n\n      // Prepara los datos para la gráfica usando los datos originales (no formateados)\n      const rawTemperatureData = temperatureData.map(item => item.raw || item);\n      setChartData(prepareChartData(rawTemperatureData, selectedCategory));\n\n      // Obtiene el valor más reciente para mostrar\n      if (temperatureData.length > 0) {\n        setCurrentValue(temperatureData[0].dato);\n      } else {\n        setCurrentValue(\"--\");\n      }\n    } else {\n      // Usar datos de ejemplo para otras categorías\n      setFilteredData(initialData[selectedCategory]);\n\n      // Prepara los datos para la gráfica\n      setChartData(prepareChartData(initialData[selectedCategory], selectedCategory));\n\n      // Obtiene el valor más reciente para mostrar\n      const lastItem = initialData[selectedCategory][initialData[selectedCategory].length - 1];\n      setCurrentValue(lastItem.dato);\n    }\n\n    // Actualiza las opciones de la gráfica según la categoría\n    setChartOptions(getChartOptions(selectedCategory));\n  }, [selectedCategory, temperatureData]);\n\n  // Manejador para el cambio de categoría\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n  };\n\n  // Función para manejar el filtro de búsqueda\n  const handleSearchChange = event => {\n    const query = event.target.value.toLowerCase();\n    setSearch(query);\n    if (selectedCategory === 'Temperatura') {\n      const filtered = temperatureData.filter(item => item.fecha.toLowerCase().includes(query) || item.dato.toLowerCase().includes(query) || item.zona && item.zona.toLowerCase().includes(query));\n      setFilteredData(filtered);\n    } else {\n      const filtered = initialData[selectedCategory].filter(item => item.fecha.toLowerCase().includes(query) || item.dato.toLowerCase().includes(query));\n      setFilteredData(filtered);\n    }\n  };\n\n  // Función para descargar la tabla como PDF\n  const downloadPDF = () => {\n    const doc = new jsPDF();\n    let y = 20;\n    doc.text(`Tabla de Datos - ${selectedCategory}`, 20, y);\n    y += 10;\n\n    // Escribir los encabezados\n    doc.text(\"Fecha\", 20, y);\n    doc.text(\"Dato\", 80, y);\n    if (selectedCategory === 'Temperatura') {\n      doc.text(\"Zona\", 140, y);\n    }\n    y += 10;\n\n    // Escribir los datos de la tabla\n    filteredData.forEach(item => {\n      doc.text(item.fecha, 20, y);\n      doc.text(item.dato, 80, y);\n      if (selectedCategory === 'Temperatura' && item.zona) {\n        doc.text(item.zona, 140, y);\n      }\n      y += 10;\n\n      // Si llegamos al final de la página, crear una nueva\n      if (y > 280) {\n        doc.addPage();\n        y = 20;\n      }\n    });\n\n    // Guardar como PDF\n    doc.save(`tabla_${selectedCategory.toLowerCase()}.pdf`);\n  };\n\n  // Renderizar mensaje de carga o error si es necesario\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        showUserIcon: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            padding: '50px'\n          },\n          children: \"Cargando datos...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        showUserIcon: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            padding: '50px',\n            color: 'red'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      showUserIcon: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: 'center',\n          margin: '10px 0 30px'\n        },\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlsRow, {\n        children: [/*#__PURE__*/_jsxDEV(CategorySelect, {\n          onChange: handleCategoryChange,\n          value: selectedCategory,\n          children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category,\n            children: category\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RightButtonsContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Buscar...\",\n            value: search,\n            onChange: handleSearchChange,\n            style: {\n              padding: '8px 10px',\n              borderRadius: '5px',\n              border: '1px solid #ddd'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DownloadButton, {\n            onClick: downloadPDF,\n            children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          gap: '30px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(DataPanel, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(Th, {\n                  children: \"Fecha\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 735,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Th, {\n                  children: \"Dato\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 736,\n                  columnNumber: 19\n                }, this), selectedCategory === 'Temperatura' && /*#__PURE__*/_jsxDEV(Th, {\n                  children: \"Zona\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 737,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: filteredData.length > 0 ? filteredData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(Td, {\n                  children: item.fecha\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 744,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  children: item.dato\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 745,\n                  columnNumber: 23\n                }, this), selectedCategory === 'Temperatura' && /*#__PURE__*/_jsxDEV(Td, {\n                  children: item.zona || '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 746,\n                  columnNumber: 62\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(Td, {\n                  colSpan: selectedCategory === 'Temperatura' ? 3 : 2,\n                  style: {\n                    textAlign: 'center'\n                  },\n                  children: \"No hay datos disponibles\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 751,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 750,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DataPanel, {\n          children: /*#__PURE__*/_jsxDEV(ChartContainer, {\n            children: [/*#__PURE__*/_jsxDEV(ChartTitleContainer, {\n              children: /*#__PURE__*/_jsxDEV(ChartTitle, {\n                children: selectedCategory\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 765,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CurrentValue, {\n              children: currentValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 769,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: '250px',\n                width: '100%',\n                flexGrow: 1\n              },\n              children: chartData && /*#__PURE__*/_jsxDEV(Line, {\n                data: chartData,\n                options: chartOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Historial, \"H89sAba64Xmp+JxhVxcLnZ2yHYs=\", false, function () {\n  return [useNavigate];\n});\n_c14 = Historial;\nexport default Historial;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ControlsRow\");\n$RefreshReg$(_c3, \"CategorySelect\");\n$RefreshReg$(_c4, \"RightButtonsContainer\");\n$RefreshReg$(_c5, \"DownloadButton\");\n$RefreshReg$(_c6, \"DataPanel\");\n$RefreshReg$(_c7, \"Table\");\n$RefreshReg$(_c8, \"Th\");\n$RefreshReg$(_c9, \"Td\");\n$RefreshReg$(_c10, \"ChartContainer\");\n$RefreshReg$(_c11, \"CurrentValue\");\n$RefreshReg$(_c12, \"ChartTitle\");\n$RefreshReg$(_c13, \"ChartTitleContainer\");\n$RefreshReg$(_c14, \"Historial\");","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","Line","styled","useNavigate","Button","ArrowDown","jsPDF","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","Column","Row","ControlsRow","_c2","ContentRow","CategorySelect","select","_c3","RightButtonsContainer","_c4","SearchButton","button","DownloadButton","_c5","DataPanel","_c6","Table","table","_c7","Th","th","_c8","Td","td","_c9","ChartContainer","_c10","CurrentValue","_c11","ChartTitle","h3","_c12","ChartTitleContainer","_c13","Title","h1","categories","initialData","Iluminacion","fecha","dato","Humedad","formatDate","dateTimeString","date","Date","getDate","toString","padStart","getMonth","getFullYear","prepareChartData","data","category","Array","isArray","length","lastSixData","slice","Math","min","reverse","labels","map","item","Marca_tiempo","getHours","getMinutes","values","parseFloat","Medicion","datasets","label","fill","backgroundColor","borderColor","borderWidth","tension","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointRadius","pointHoverRadius","fixedHumidityData","hora","valor","fixedIlluminationData","dataToUse","getChartOptions","max","stepSize","responsive","maintainAspectRatio","plugins","legend","display","tooltip","mode","intersect","callbacks","context","dataset","parsed","y","scales","x","grid","color","drawBorder","ticks","font","size","title","text","elements","point","radius","hoverRadius","line","layout","padding","top","right","bottom","left","Historial","_s","search","setSearch","selectedCategory","setSelectedCategory","temperatureData","setTemperatureData","filteredData","setFilteredData","chartData","setChartData","currentValue","setCurrentValue","chartOptions","setChartOptions","error","setError","loading","setLoading","unidades","navigate","token","localStorage","getItem","fetchTemperatureData","response","get","formattedData","zona","Zona","raw","err","console","rawTemperatureData","lastItem","handleCategoryChange","event","target","value","handleSearchChange","query","toLowerCase","filtered","filter","includes","downloadPDF","doc","forEach","addPage","save","children","showUserIcon","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","margin","onChange","type","placeholder","borderRadius","border","onClick","flexDirection","justifyContent","gap","width","index","colSpan","height","flexGrow","options","_c14","$RefreshReg$"],"sources":["C:/Users/Roger/Documents/TT2_AVANCES/prototipo-gecko/frontend/src/pages/historial.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Button from \"../components/Button\";\r\nimport { ArrowDown } from \"lucide-react\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport axios from \"axios\";\r\n\r\n// Contenedor principal que alberga toda la interfaz\r\nconst Container = styled.div`\r\n  padding: 50px 30px;\r\n  margin: auto;\r\n  max-width: 1400px;         /* Ancho máximo del contenedor - AJUSTABLE */\r\n  background: #f8f4e1;\r\n  border-radius: 20px;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  min-height: 85vh;          /* Altura mínima - AJUSTABLE */\r\n`;\r\n\r\n// Componente para crear columnas flexibles\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n`;\r\n\r\n// Componente base para crear filas flexibles\r\nconst Row = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  gap: 20px;\r\n  padding: 20px;             /* Padding de las filas - AJUSTABLE */\r\n  margin: auto;\r\n  width: 100%;\r\n  border-radius: 25px;\r\n`;\r\n\r\n// Fila específica para los controles (selector y botón)\r\nconst ControlsRow = styled(Row)`\r\n  background: transparent;\r\n  justify-content: flex-start;\r\n  gap: 15px;\r\n  padding: 10px 20px;        /* Padding reducido - AJUSTABLE */\r\n`;\r\n\r\n// Fila para el contenido principal (tabla y gráfica)\r\nconst ContentRow = styled(Row)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: nowrap;\r\n  justify-content: space-between;\r\n  gap: 30px;                 /* Espacio entre tabla y gráfica - AJUSTABLE */\r\n  \r\n  @media (max-width: 1200px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\n// Selector de categorías (Temperatura, Humedad, Iluminación)\r\nconst CategorySelect = styled.select`\r\n  padding: 12px 15px;\r\n  border-radius: 25px;\r\n  border: 1px solid #ddd;\r\n  background-color: white;\r\n  width: 300px;\r\n  font-size: 16px;\r\n  appearance: none;\r\n  background-image: url(\"data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e\");\r\n  background-repeat: no-repeat;\r\n  background-position: right 1rem center;\r\n  background-size: 1em;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #B4864D;\r\n  }\r\n`;\r\n\r\n// Contenedor para los botones de la derecha\r\nconst RightButtonsContainer = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n`;\r\n\r\n// Botón rojo de búsqueda\r\nconst SearchButton = styled.button`\r\n  background-color: #E74C3C;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 8px 20px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n  font-size: 14px;\r\n  \r\n  &:hover {\r\n    background-color: #C0392B;\r\n  }\r\n`;\r\n\r\n// Botón para descargar la tabla de datos\r\nconst DownloadButton = styled.button`\r\n  background-color: white;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  padding: 8px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  &:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n`;\r\n\r\n// Panel para contener la tabla o la gráfica\r\nconst DataPanel = styled.div`\r\n  background: rgba(123, 95, 61, 0.8);\r\n  box-shadow: inset -5px -5px 10px rgba(238, 209, 146, 0.5), \r\n              10px 10px 20px rgba(245, 239, 230, 0.2);\r\n  backdrop-filter: blur(10000px);\r\n  filter: drop-shadow(5px 5px 10px rgba(248, 202, 132, 3));\r\n  border: 1px solid rgba(248, 216, 186, 0.25);\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  width: 47%;  /* Ligeramente reducido para asegurar que entren lado a lado */\r\n  min-width: 300px;\r\n  min-height: 450px;  /* Altura mínima para asegurar tamaños comparables */\r\n  max-height: 500px;\r\n  overflow: auto;\r\n  \r\n  @media (max-width: 1200px) {\r\n    width: 100%;\r\n    max-width: 500px;\r\n  }\r\n`;\r\n\r\n// Estilo de la tabla\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  background-color: white;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n`;\r\n\r\n// Estilo para las celdas de cabecera de la tabla\r\nconst Th = styled.th`\r\n  background-color: #f0f0f0;\r\n  color: #333;\r\n  padding: 8px;\r\n  text-align: center;\r\n  border: 1px solid #ddd;\r\n  font-size: 14px;\r\n`;\r\n\r\n// Estilo para las celdas de datos de la tabla\r\nconst Td = styled.td`\r\n  padding: 6px 8px;\r\n  text-align: center;\r\n  border: 1px solid #ddd;\r\n  font-size: 14px;\r\n`;\r\n\r\n// Contenedor para la gráfica\r\nconst ChartContainer = styled.div`\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 300px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Estilo para mostrar el valor actual de la medición\r\nconst CurrentValue = styled.div`\r\n  text-align: center;\r\n  font-size: 3rem;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\n// Título de la gráfica\r\nconst ChartTitle = styled.h3`\r\n  text-align: center;\r\n  background-color: #FF8C00;\r\n  color: white;\r\n  padding: 5px 15px;\r\n  border-radius: 4px;\r\n  margin: 0 auto 10px;\r\n  font-size: 16px;\r\n  display: inline-block;\r\n`;\r\n\r\n// Contenedor del título\r\nconst ChartTitleContainer = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\n// Título principal (no utilizado actualmente)\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  font-size: 2rem;           /* Tamaño de fuente - AJUSTABLE */\r\n  margin-bottom: 20px;       /* Margen inferior - AJUSTABLE */\r\n  color: #333;\r\n`;\r\n\r\n// Categorías disponibles para seleccionar\r\nconst categories = ['Temperatura', 'Iluminacion', 'Humedad'];\r\n\r\n// Datos de ejemplo para cada categoría (sólo para Iluminación y Humedad)\r\nconst initialData = {\r\n  Iluminacion: [\r\n    { fecha: '01/02/2024', dato: '350 lux' },\r\n    { fecha: '02/02/2024', dato: '340 lux' },\r\n    { fecha: '03/02/2024', dato: '360 lux' },\r\n    { fecha: '04/02/2024', dato: '370 lux' },\r\n    { fecha: '05/02/2024', dato: '380 lux' },\r\n    { fecha: '06/02/2024', dato: '390 lux' },\r\n    { fecha: '07/02/2024', dato: '400 lux' },\r\n    { fecha: '08/02/2024', dato: '410 lux' },\r\n    { fecha: '09/02/2024', dato: '420 lux' },\r\n    { fecha: '10/02/2024', dato: '430 lux' },\r\n    { fecha: '11/02/2024', dato: '440 lux' },\r\n    { fecha: '12/02/2024', dato: '450 lux' },\r\n    { fecha: '13/02/2024', dato: '430 lux' },\r\n    { fecha: '14/02/2024', dato: '420 lux' },\r\n    { fecha: '15/02/2024', dato: '410 lux' },\r\n    { fecha: '16/02/2024', dato: '400 lux' },\r\n    { fecha: '17/02/2024', dato: '420 lux' },\r\n    { fecha: '18/02/2024', dato: '430 lux' },\r\n  ],\r\n  Humedad: [\r\n    { fecha: '01/02/2024', dato: '60%' },\r\n    { fecha: '02/02/2024', dato: '58%' },\r\n    { fecha: '03/02/2024', dato: '62%' },\r\n    { fecha: '04/02/2024', dato: '64%' },\r\n    { fecha: '05/02/2024', dato: '63%' },\r\n    { fecha: '06/02/2024', dato: '65%' },\r\n    { fecha: '07/02/2024', dato: '67%' },\r\n    { fecha: '08/02/2024', dato: '70%' },\r\n    { fecha: '09/02/2024', dato: '68%' },\r\n    { fecha: '10/02/2024', dato: '65%' },\r\n    { fecha: '11/02/2024', dato: '63%' },\r\n    { fecha: '12/02/2024', dato: '62%' },\r\n    { fecha: '13/02/2024', dato: '60%' },\r\n    { fecha: '14/02/2024', dato: '62%' },\r\n    { fecha: '15/02/2024', dato: '64%' },\r\n    { fecha: '16/02/2024', dato: '66%' },\r\n    { fecha: '17/02/2024', dato: '63%' },\r\n    { fecha: '18/02/2024', dato: '62%' },\r\n  ],\r\n};\r\n\r\n/**\r\n * Función para formatear la fecha de la base de datos a formato de visualización\r\n * @param {String} dateTimeString - Fecha en formato ISO de la BD\r\n * @returns {String} Fecha formateada como DD/MM/YYYY\r\n */\r\nconst formatDate = (dateTimeString) => {\r\n  const date = new Date(dateTimeString);\r\n  return `${date.getDate().toString().padStart(2, '0')}/${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getFullYear()}`;\r\n};\r\n\r\n/**\r\n * Prepara los datos para la gráfica Chart.js\r\n * @param {Array} data - Array de objetos con datos\r\n * @param {String} category - Categoría seleccionada\r\n * @returns {Object} Objeto formateado para Chart.js\r\n */\r\nconst prepareChartData = (data, category) => {\r\n  if (category === 'Temperatura' && Array.isArray(data) && data.length > 0) {\r\n    // Usar solo los últimos 6 registros para la gráfica (o menos si hay menos de 6)\r\n    const lastSixData = data.slice(0, Math.min(6, data.length)).reverse();\r\n    \r\n    // Extraer horas de los timestamps para etiquetas\r\n    const labels = lastSixData.map(item => {\r\n      const date = new Date(item.Marca_tiempo);\r\n      return `${date.getHours()}:${date.getMinutes().toString().padStart(2, '0')}`;\r\n    });\r\n    \r\n    // Extraer valores para los datos\r\n    const values = lastSixData.map(item => parseFloat(item.Medicion));\r\n    \r\n    return {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: category,\r\n          data: values,\r\n          fill: false,\r\n          backgroundColor: 'rgba(255, 165, 0, 0.2)',\r\n          borderColor: '#FFA500',\r\n          borderWidth: 3,\r\n          tension: 0.3,\r\n          pointBackgroundColor: '#FFA500',\r\n          pointBorderColor: '#FFF',\r\n          pointBorderWidth: 2,\r\n          pointRadius: 5,\r\n          pointHoverRadius: 7,\r\n        }\r\n      ]\r\n    };\r\n  } else {\r\n    // Usar datos fijos para otras categorías\r\n    const fixedHumidityData = [\r\n      { hora: '6 AM', valor: 60 },\r\n      { hora: '9 AM', valor: 63 },\r\n      { hora: '12 PM', valor: 67 },\r\n      { hora: '3 PM', valor: 70 },\r\n      { hora: '6 PM', valor: 65 },\r\n      { hora: '9 PM', valor: 62 }\r\n    ];\r\n    \r\n    const fixedIlluminationData = [\r\n      { hora: '6 AM', valor: 320 },\r\n      { hora: '9 AM', valor: 380 },\r\n      { hora: '12 PM', valor: 420 },\r\n      { hora: '3 PM', valor: 430 },\r\n      { hora: '6 PM', valor: 390 },\r\n      { hora: '9 PM', valor: 350 }\r\n    ];\r\n    \r\n    // Seleccionar el conjunto de datos según la categoría\r\n    let dataToUse = category === 'Humedad' ? fixedHumidityData : fixedIlluminationData;\r\n    \r\n    // Preparar los datos para Chart.js\r\n    return {\r\n      labels: dataToUse.map(item => item.hora),\r\n      datasets: [\r\n        {\r\n          label: category,\r\n          data: dataToUse.map(item => item.valor),\r\n          fill: false,\r\n          backgroundColor: 'rgba(255, 165, 0, 0.2)',\r\n          borderColor: '#FFA500',\r\n          borderWidth: 3,\r\n          tension: 0.3,\r\n          pointBackgroundColor: '#FFA500',\r\n          pointBorderColor: '#FFF',\r\n          pointBorderWidth: 2,\r\n          pointRadius: 5,\r\n          pointHoverRadius: 7,\r\n        }\r\n      ]\r\n    };\r\n  }\r\n};\r\n\r\n// Opciones de configuración para la gráfica\r\nconst getChartOptions = (category) => {\r\n  // Determinar el rango según la categoría\r\n  let min, max, stepSize;\r\n  \r\n  switch(category) {\r\n    case 'Temperatura':\r\n      min = 20.0; // Ajustado para mostrar valores más bajos\r\n      max = 35.0; // Ajustado para mostrar valores más altos\r\n      stepSize = 2.5;\r\n      break;\r\n    case 'Humedad':\r\n      min = 55;\r\n      max = 75;\r\n      stepSize = 5;\r\n      break;\r\n    case 'Iluminacion':\r\n      min = 300;\r\n      max = 450;\r\n      stepSize = 50;\r\n      break;\r\n    default:\r\n      min = null;\r\n      max = null;\r\n      stepSize = null;\r\n  }\r\n\r\n  return {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false\r\n      },\r\n      tooltip: {\r\n        mode: 'index',\r\n        intersect: false,\r\n        callbacks: {\r\n          label: function(context) {\r\n            let label = context.dataset.label || '';\r\n            if (label) {\r\n              label += ': ';\r\n            }\r\n            if (context.parsed.y !== null) {\r\n              label += context.parsed.y;\r\n              // Añadir unidad según la categoría\r\n              if (category === 'Temperatura') label += '°C';\r\n              else if (category === 'Humedad') label += '%';\r\n              else if (category === 'Iluminacion') label += ' lux';\r\n            }\r\n            return label;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    scales: {\r\n      x: {\r\n        display: true,\r\n        grid: {\r\n          display: true,\r\n          color: '#CCCCCC',\r\n          drawBorder: true,\r\n        },\r\n        ticks: {\r\n          font: {\r\n            size: 12\r\n          }\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: 'Tiempo',\r\n          font: {\r\n            size: 14\r\n          }\r\n        }\r\n      },\r\n      y: {\r\n        display: true,\r\n        grid: {\r\n          display: true,\r\n          color: '#CCCCCC',\r\n          drawBorder: true,\r\n        },\r\n        min: min,\r\n        max: max,\r\n        ticks: {\r\n          stepSize: stepSize,\r\n          font: {\r\n            size: 12\r\n          }\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: category,\r\n          font: {\r\n            size: 14\r\n          }\r\n        }\r\n      }\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 5,\r\n        hoverRadius: 7,\r\n        borderWidth: 2\r\n      },\r\n      line: {\r\n        tension: 0.3,\r\n        borderWidth: 3,\r\n      }\r\n    },\r\n    layout: {\r\n      padding: {\r\n        top: 5,\r\n        right: 20,\r\n        bottom: 20,\r\n        left: 20\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Componente principal para la visualización del historial de datos\r\n */\r\nfunction Historial() {\r\n  // Estado para la búsqueda\r\n  const [search, setSearch] = useState('');\r\n\r\n  // Estado para la categoría seleccionada\r\n  const [selectedCategory, setSelectedCategory] = useState(categories[0]);\r\n  \r\n  // Estado para los datos de temperatura desde la API\r\n  const [temperatureData, setTemperatureData] = useState([]);\r\n  \r\n  // Estado para los datos filtrados según la categoría seleccionada\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  \r\n  // Estado para los datos de la gráfica\r\n  const [chartData, setChartData] = useState(null);\r\n  \r\n  // Estado para el valor actual a mostrar prominentemente\r\n  const [currentValue, setCurrentValue] = useState('');\r\n  \r\n  // Estado para las opciones de la gráfica\r\n  const [chartOptions, setChartOptions] = useState(getChartOptions(categories[0]));\r\n  \r\n  // Estado para controlar errores de carga\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Estado para controlar carga de datos\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  // Unidades según la categoría seleccionada\r\n  const unidades = {\r\n    'Temperatura': '°C',\r\n    'Humedad': '%',\r\n    'Iluminacion': 'lux'\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Verificar autenticación\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Cargar datos de temperatura desde la API\r\n  useEffect(() => {\r\n    const fetchTemperatureData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await axios.get('http://localhost:5000/api/temperatura');\r\n        \r\n        // Verificar si hay datos\r\n        if (response.data && response.data.length > 0) {\r\n          // Procesar datos de temperatura para el formato esperado por la tabla\r\n          const formattedData = response.data.map(item => ({\r\n            fecha: formatDate(item.Marca_tiempo),\r\n            dato: `${item.Medicion}°C`,\r\n            zona: item.Zona,\r\n            raw: item // Guardamos el objeto original para uso posterior\r\n          }));\r\n          \r\n          setTemperatureData(formattedData);\r\n        } else {\r\n          setTemperatureData([]);\r\n        }\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(\"Error al cargar datos de temperatura:\", err);\r\n        setError(\"Error al cargar datos de temperatura. Por favor, intente de nuevo más tarde.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchTemperatureData();\r\n  }, []);\r\n\r\n  // Efecto para actualizar los datos cuando cambia la categoría o se cargan los datos de temperatura\r\n  useEffect(() => {\r\n    if (selectedCategory === 'Temperatura') {\r\n      // Usar datos reales de temperatura\r\n      setFilteredData(temperatureData);\r\n      \r\n      // Prepara los datos para la gráfica usando los datos originales (no formateados)\r\n      const rawTemperatureData = temperatureData.map(item => item.raw || item);\r\n      setChartData(prepareChartData(rawTemperatureData, selectedCategory));\r\n      \r\n      // Obtiene el valor más reciente para mostrar\r\n      if (temperatureData.length > 0) {\r\n        setCurrentValue(temperatureData[0].dato);\r\n      } else {\r\n        setCurrentValue(\"--\");\r\n      }\r\n    } else {\r\n      // Usar datos de ejemplo para otras categorías\r\n      setFilteredData(initialData[selectedCategory]);\r\n      \r\n      // Prepara los datos para la gráfica\r\n      setChartData(prepareChartData(initialData[selectedCategory], selectedCategory));\r\n      \r\n      // Obtiene el valor más reciente para mostrar\r\n      const lastItem = initialData[selectedCategory][initialData[selectedCategory].length - 1];\r\n      setCurrentValue(lastItem.dato);\r\n    }\r\n    \r\n    // Actualiza las opciones de la gráfica según la categoría\r\n    setChartOptions(getChartOptions(selectedCategory));\r\n  }, [selectedCategory, temperatureData]);\r\n\r\n  // Manejador para el cambio de categoría\r\n  const handleCategoryChange = (event) => {\r\n    setSelectedCategory(event.target.value);\r\n  };\r\n\r\n  // Función para manejar el filtro de búsqueda\r\n  const handleSearchChange = (event) => {\r\n    const query = event.target.value.toLowerCase();\r\n    setSearch(query);\r\n    \r\n    if (selectedCategory === 'Temperatura') {\r\n      const filtered = temperatureData.filter(\r\n        (item) => \r\n          item.fecha.toLowerCase().includes(query) || \r\n          item.dato.toLowerCase().includes(query) ||\r\n          (item.zona && item.zona.toLowerCase().includes(query))\r\n      );\r\n      setFilteredData(filtered);\r\n    } else {\r\n      const filtered = initialData[selectedCategory].filter(\r\n        (item) => item.fecha.toLowerCase().includes(query) || item.dato.toLowerCase().includes(query)\r\n      );\r\n      setFilteredData(filtered);\r\n    }\r\n  };\r\n\r\n  // Función para descargar la tabla como PDF\r\n  const downloadPDF = () => {\r\n    const doc = new jsPDF();\r\n    let y = 20;\r\n    doc.text(`Tabla de Datos - ${selectedCategory}`, 20, y);\r\n    y += 10;\r\n\r\n    // Escribir los encabezados\r\n    doc.text(\"Fecha\", 20, y);\r\n    doc.text(\"Dato\", 80, y);\r\n    if (selectedCategory === 'Temperatura') {\r\n      doc.text(\"Zona\", 140, y);\r\n    }\r\n    y += 10;\r\n\r\n    // Escribir los datos de la tabla\r\n    filteredData.forEach(item => {\r\n      doc.text(item.fecha, 20, y);\r\n      doc.text(item.dato, 80, y);\r\n      if (selectedCategory === 'Temperatura' && item.zona) {\r\n        doc.text(item.zona, 140, y);\r\n      }\r\n      y += 10;\r\n      \r\n      // Si llegamos al final de la página, crear una nueva\r\n      if (y > 280) {\r\n        doc.addPage();\r\n        y = 20;\r\n      }\r\n    });\r\n\r\n    // Guardar como PDF\r\n    doc.save(`tabla_${selectedCategory.toLowerCase()}.pdf`);\r\n  };\r\n\r\n  // Renderizar mensaje de carga o error si es necesario\r\n  if (loading) {\r\n    return (\r\n      <>\r\n        <Header showUserIcon={true} />\r\n        <Container>\r\n          <div style={{ textAlign: 'center', padding: '50px' }}>\r\n            Cargando datos...\r\n          </div>\r\n        </Container>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <>\r\n        <Header showUserIcon={true} />\r\n        <Container>\r\n          <div style={{ textAlign: 'center', padding: '50px', color: 'red' }}>\r\n            {error}\r\n          </div>\r\n        </Container>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Cabecera de la aplicación */}\r\n      <Header showUserIcon={true} />\r\n      \r\n      {/* Contenedor principal */}\r\n      <Container>\r\n        {/* Título */}\r\n        <h1 style={{ textAlign: 'center', margin: '10px 0 30px' }}> </h1>\r\n        \r\n        {/* Fila de controles: selector de categoría y botones */}\r\n        <ControlsRow>\r\n          <CategorySelect onChange={handleCategoryChange} value={selectedCategory}>\r\n            {categories.map((category) => (\r\n              <option key={category} value={category}>\r\n                {category}\r\n              </option>\r\n            ))}\r\n          </CategorySelect>\r\n  \r\n          <RightButtonsContainer>\r\n            {/* Botón búsqueda */}\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Buscar...\"\r\n              value={search}\r\n              onChange={handleSearchChange}\r\n              style={{\r\n                padding: '8px 10px',\r\n                borderRadius: '5px',\r\n                border: '1px solid #ddd'\r\n              }}\r\n            />\r\n\r\n            <DownloadButton onClick={downloadPDF}>\r\n              <ArrowDown size={24} />\r\n            </DownloadButton>\r\n          </RightButtonsContainer>\r\n        </ControlsRow>\r\n        \r\n        {/* Fila de contenido: tabla y gráfica */}\r\n        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', gap: '30px', width: '100%' }}>\r\n          {/* Panel izquierdo: Tabla de datos históricos */}\r\n          <DataPanel>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <Th>Fecha</Th>\r\n                  <Th>Dato</Th>\r\n                  {selectedCategory === 'Temperatura' && <Th>Zona</Th>}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredData.length > 0 ? (\r\n                  filteredData.map((item, index) => (\r\n                    <tr key={index}>\r\n                      <Td>{item.fecha}</Td>\r\n                      <Td>{item.dato}</Td>\r\n                      {selectedCategory === 'Temperatura' && <Td>{item.zona || '-'}</Td>}\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <Td colSpan={selectedCategory === 'Temperatura' ? 3 : 2} style={{textAlign: 'center'}}>\r\n                      No hay datos disponibles\r\n                    </Td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n          </DataPanel>\r\n          \r\n          {/* Panel derecho: Gráfica y valor actual */}\r\n          <DataPanel>\r\n            <ChartContainer>\r\n              {/* Título de la gráfica (categoría seleccionada) */}\r\n              <ChartTitleContainer>\r\n                <ChartTitle>{selectedCategory}</ChartTitle>\r\n              </ChartTitleContainer>\r\n              \r\n              {/* Valor actual */}\r\n              <CurrentValue>{currentValue}</CurrentValue>\r\n              \r\n              {/* Contenedor para la gráfica con espacio suficiente para ejes y etiquetas */}\r\n              <div style={{ height: '250px', width: '100%', flexGrow: 1 }}>\r\n                {chartData && <Line data={chartData} options={chartOptions} />}\r\n              </div>\r\n            </ChartContainer>\r\n          </DataPanel>\r\n        </div>\r\n      </Container>\r\n      \r\n      {/* Pie de página */}\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Historial;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,KAAK,QAAQ,OAAO;AAC7B,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,SAAS,GAAGV,MAAM,CAACW,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,EAAA,GAbMF,SAAS;AAcf,MAAMG,MAAM,GAAGb,MAAM,CAACW,GAAG;AACzB;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMG,GAAG,GAAGd,MAAM,CAACW,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMI,WAAW,GAAGf,MAAM,CAACc,GAAG,CAAC;AAC/B;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAE,GAAA,GAPMD,WAAW;AAQjB,MAAME,UAAU,GAAGjB,MAAM,CAACc,GAAG,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMI,cAAc,GAAGlB,MAAM,CAACmB,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GAnBMF,cAAc;AAoBpB,MAAMG,qBAAqB,GAAGrB,MAAM,CAACW,GAAG;AACxC;AACA;AACA,CAAC;;AAED;AAAAW,GAAA,GALMD,qBAAqB;AAM3B,MAAME,YAAY,GAAGvB,MAAM,CAACwB,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMC,cAAc,GAAGzB,MAAM,CAACwB,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAE,GAAA,GAfMD,cAAc;AAgBpB,MAAME,SAAS,GAAG3B,MAAM,CAACW,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAiB,GAAA,GArBMD,SAAS;AAsBf,MAAME,KAAK,GAAG7B,MAAM,CAAC8B,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GARMF,KAAK;AASX,MAAMG,EAAE,GAAGhC,MAAM,CAACiC,EAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GATMF,EAAE;AAUR,MAAMG,EAAE,GAAGnC,MAAM,CAACoC,EAAE;AACpB;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GAPMF,EAAE;AAQR,MAAMG,cAAc,GAAGtC,MAAM,CAACW,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAA4B,IAAA,GAZMD,cAAc;AAapB,MAAME,YAAY,GAAGxC,MAAM,CAACW,GAAG;AAC/B;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAA8B,IAAA,GAPMD,YAAY;AAQlB,MAAME,UAAU,GAAG1C,MAAM,CAAC2C,EAAE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,IAAA,GAXMF,UAAU;AAYhB,MAAMG,mBAAmB,GAAG7C,MAAM,CAACW,GAAG;AACtC;AACA;AACA,CAAC;;AAED;AAAAmC,IAAA,GALMD,mBAAmB;AAMzB,MAAME,KAAK,GAAG/C,MAAM,CAACgD,EAAE;AACvB;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMC,UAAU,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}