{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roger\\\\Documents\\\\TT2_AVANCES\\\\prototipo-gecko\\\\frontend\\\\src\\\\pages\\\\pruebasNotificaciones.jsx\";\nimport React, { Component } from 'react';\nimport TemperaturaAlert from './TemperaturaAlert';\nimport { getTemperature, setTemperature } from './TemperatureUtility';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass PruebasNotificaciones extends Component {\n  constructor(props) {\n    super(props);\n    // Método para actualizar la temperatura\n    this.setTemperatura = newTemp => {\n      console.log(\"PruebasNotificaciones actualizando temperatura a:\", newTemp);\n      this.setState({\n        temperatura: newTemp\n      });\n      // También actualizamos el utilitario para notificar a otros componentes\n      setTemperature(newTemp);\n    };\n    this.state = {\n      temperatura: getTemperature() // Obtener la temperatura del utilitario\n    };\n    console.log(\"PruebasNotificaciones inicializado con temperatura:\", this.state.temperatura);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TemperaturaAlert, {\n        temperatura: this.state.temperatura,\n        setTemperatura: this.setTemperatura\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default PruebasNotificaciones;","map":{"version":3,"names":["React","Component","TemperaturaAlert","getTemperature","setTemperature","jsxDEV","_jsxDEV","PruebasNotificaciones","constructor","props","setTemperatura","newTemp","console","log","setState","temperatura","state","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Roger/Documents/TT2_AVANCES/prototipo-gecko/frontend/src/pages/pruebasNotificaciones.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport TemperaturaAlert from './TemperaturaAlert';\r\nimport { getTemperature, setTemperature } from './TemperatureUtility';\r\n\r\nclass PruebasNotificaciones extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      temperatura: getTemperature() // Obtener la temperatura del utilitario\r\n    };\r\n    console.log(\"PruebasNotificaciones inicializado con temperatura:\", this.state.temperatura);\r\n  }\r\n  \r\n  // Método para actualizar la temperatura\r\n  setTemperatura = (newTemp) => {\r\n    console.log(\"PruebasNotificaciones actualizando temperatura a:\", newTemp);\r\n    this.setState({ temperatura: newTemp });\r\n    // También actualizamos el utilitario para notificar a otros componentes\r\n    setTemperature(newTemp);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <TemperaturaAlert \r\n          temperatura={this.state.temperatura} \r\n          setTemperatura={this.setTemperatura} \r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PruebasNotificaciones;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,SAASC,cAAc,EAAEC,cAAc,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,qBAAqB,SAASN,SAAS,CAAC;EAC5CO,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAOd;IAAA,KACAC,cAAc,GAAIC,OAAO,IAAK;MAC5BC,OAAO,CAACC,GAAG,CAAC,mDAAmD,EAAEF,OAAO,CAAC;MACzE,IAAI,CAACG,QAAQ,CAAC;QAAEC,WAAW,EAAEJ;MAAQ,CAAC,CAAC;MACvC;MACAP,cAAc,CAACO,OAAO,CAAC;IACzB,CAAC;IAZC,IAAI,CAACK,KAAK,GAAG;MACXD,WAAW,EAAEZ,cAAc,CAAC,CAAC,CAAC;IAChC,CAAC;IACDS,OAAO,CAACC,GAAG,CAAC,qDAAqD,EAAE,IAAI,CAACG,KAAK,CAACD,WAAW,CAAC;EAC5F;EAUAE,MAAMA,CAAA,EAAG;IACP,oBACEX,OAAA;MAAAY,QAAA,eACEZ,OAAA,CAACJ,gBAAgB;QACfa,WAAW,EAAE,IAAI,CAACC,KAAK,CAACD,WAAY;QACpCL,cAAc,EAAE,IAAI,CAACA;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;AAEA,eAAef,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}