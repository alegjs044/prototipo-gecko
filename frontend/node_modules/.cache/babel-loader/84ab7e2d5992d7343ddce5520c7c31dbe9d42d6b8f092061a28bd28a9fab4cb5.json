{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roger\\\\Documents\\\\TT2_AVANCES\\\\prototipo-gecko\\\\frontend\\\\src\\\\pages\\\\dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { getTemperature, subscribeToTemperature } from './TemperatureUtility';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\n// (Todos los estilos y componentes se mantienen igual...)\n// ... (omitido por brevedad)\n\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [modoAutomatico, setModoAutomatico] = useState(false);\n  const [placaTermica, setPlacaTermica] = useState(85);\n  const [luzVisible, setLuzVisible] = useState(false);\n  const [luzUV, setLuzUV] = useState(true);\n  const [humidificador, setHumidificador] = useState(false);\n  const [cicloDia, setCicloDia] = useState(\"ma√±ana\");\n\n  // Usamos un estado local para la temperatura y lo actualizamos cuando cambia\n  const [temperatura, setTemperaturaLocal] = useState(getTemperature());\n  useEffect(() => {\n    // Verificar autenticaci√≥n\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/login\");\n    }\n\n    // Configurar ciclo del d√≠a\n    const hora = new Date().getHours();\n    if (hora >= 6 && hora < 12) setCicloDia(\"ma√±ana\");else if (hora >= 12 && hora < 18) setCicloDia(\"tarde\");else setCicloDia(\"noche\");\n\n    // Suscribirse a cambios de temperatura\n    const unsubscribe = subscribeToTemperature(newTemp => {\n      setTemperaturaLocal(newTemp);\n    });\n\n    // Limpiar suscripci√≥n al desmontar\n    return () => {\n      unsubscribe();\n    };\n  }, [navigate]);\n\n  // Datos de gr√°ficas\n  const chartData = (label, data, color) => ({\n    labels: [\"6 AM\", \"9 AM\", \"12 PM\", \"3 PM\", \"6 PM\", \"9 PM\"],\n    datasets: [{\n      label,\n      data,\n      borderColor: color,\n      backgroundColor: `${color}50`\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      showUserIcon: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            children: \"Temperatura\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MiniCard, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uD83C\\uDF21\\uFE0F M\\xEDnima: \", temperatura.toFixed(2), \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uD83C\\uDF21\\uFE0F M\\xE1xima: 32\\xB0C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CenterColumn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightColumn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashboard, \"2PJwfRd9XDH6/kYyAs69UMW1JW8=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","styled","useNavigate","Header","Footer","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","getTemperature","subscribeToTemperature","jsxDEV","_jsxDEV","Fragment","_Fragment","register","Dashboard","_s","navigate","modoAutomatico","setModoAutomatico","placaTermica","setPlacaTermica","luzVisible","setLuzVisible","luzUV","setLuzUV","humidificador","setHumidificador","cicloDia","setCicloDia","temperatura","setTemperaturaLocal","token","localStorage","getItem","hora","Date","getHours","unsubscribe","newTemp","chartData","label","data","color","labels","datasets","borderColor","backgroundColor","children","showUserIcon","fileName","_jsxFileName","lineNumber","columnNumber","Container","Column","Card","CardTitle","MiniCard","toFixed","CenterColumn","RightColumn","_c","$RefreshReg$"],"sources":["C:/Users/Roger/Documents/TT2_AVANCES/prototipo-gecko/frontend/src/pages/dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { getTemperature, subscribeToTemperature } from './TemperatureUtility';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\n// (Todos los estilos y componentes se mantienen igual...)\r\n// ... (omitido por brevedad)\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n  const [modoAutomatico, setModoAutomatico] = useState(false);\r\n  const [placaTermica, setPlacaTermica] = useState(85);\r\n  const [luzVisible, setLuzVisible] = useState(false);\r\n  const [luzUV, setLuzUV] = useState(true);\r\n  const [humidificador, setHumidificador] = useState(false);\r\n  const [cicloDia, setCicloDia] = useState(\"ma√±ana\");\r\n  \r\n  // Usamos un estado local para la temperatura y lo actualizamos cuando cambia\r\n  const [temperatura, setTemperaturaLocal] = useState(getTemperature());\r\n\r\n  useEffect(() => {\r\n    // Verificar autenticaci√≥n\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      navigate(\"/login\");\r\n    }\r\n\r\n    // Configurar ciclo del d√≠a\r\n    const hora = new Date().getHours();\r\n    if (hora >= 6 && hora < 12) setCicloDia(\"ma√±ana\");\r\n    else if (hora >= 12 && hora < 18) setCicloDia(\"tarde\");\r\n    else setCicloDia(\"noche\");\r\n    \r\n    // Suscribirse a cambios de temperatura\r\n    const unsubscribe = subscribeToTemperature((newTemp) => {\r\n      setTemperaturaLocal(newTemp);\r\n    });\r\n    \r\n    // Limpiar suscripci√≥n al desmontar\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [navigate]);\r\n\r\n  // Datos de gr√°ficas\r\n  const chartData = (label, data, color) => ({\r\n    labels: [\"6 AM\", \"9 AM\", \"12 PM\", \"3 PM\", \"6 PM\", \"9 PM\"],\r\n    datasets: [{ label, data, borderColor: color, backgroundColor: `${color}50` }],\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header showUserIcon={true} />\r\n      <Container>\r\n        {/* Columna Izquierda */}\r\n        <Column>\r\n          <Card>\r\n            <CardTitle>Temperatura</CardTitle>\r\n            <MiniCard>\r\n              <p>üå°Ô∏è M√≠nima: {temperatura.toFixed(2)}¬∞C</p>\r\n              <p>üå°Ô∏è M√°xima: 32¬∞C</p>\r\n            </MiniCard>\r\n          </Card>\r\n          {/* ... (resto de las cards) */}\r\n        </Column>\r\n\r\n        {/* Columna Central */}\r\n        <CenterColumn>\r\n          {/* ... (gr√°ficas) */}\r\n        </CenterColumn>\r\n\r\n       {/* Columna Derecha */}\r\n       <RightColumn>\r\n          {/* ... (panel de control) */}\r\n       </RightColumn>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}