{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roger\\\\Documents\\\\TT2_AVANCES\\\\prototipo-gecko\\\\frontend\\\\src\\\\pages\\\\historial.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport { Line } from \"react-chartjs-2\";\nimport styled from 'styled-components';\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"../components/Button\";\nimport { ArrowDown } from \"lucide-react\";\n\n// Contenedor principal que alberga toda la interfaz\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 50px 30px;\n  margin: auto;\n  max-width: 1400px;         /* Ancho máximo del contenedor - AJUSTABLE */\n  background: #f8f4e1;\n  border-radius: 20px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  min-height: 85vh;          /* Altura mínima - AJUSTABLE */\n`;\n\n// Componente para crear columnas flexibles\n_c = Container;\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\n// Componente base para crear filas flexibles\nconst Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 20px;\n  padding: 20px;             /* Padding de las filas - AJUSTABLE */\n  margin: auto;\n  width: 100%;\n  border-radius: 25px;\n`;\n\n// Fila específica para los controles (selector y botón)\nconst ControlsRow = styled(Row)`\n  background: transparent;\n  justify-content: flex-start;\n  gap: 15px;\n  padding: 10px 20px;        /* Padding reducido - AJUSTABLE */\n`;\n\n// Fila para el contenido principal (tabla y gráfica)\n_c2 = ControlsRow;\nconst ContentRow = styled(Row)`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 30px;                 /* Espacio entre tabla y gráfica - AJUSTABLE */\n  \n  @media (max-width: 1200px) {\n    flex-direction: column;\n  }\n`;\n\n// Selector de categorías (Temperatura, Humedad, Iluminación)\n_c3 = ContentRow;\nconst CategorySelect = styled.select`\n  padding: 12px 15px;        /* Padding interno - AJUSTABLE */\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  background-color: white;\n  width: 300px;              /* Ancho del selector - AJUSTABLE */\n  font-size: 16px;           /* Tamaño de fuente - AJUSTABLE */\n  \n  &:focus {\n    outline: none;\n    border-color: #B4864D;\n  }\n`;\n\n// Botón para descargar la tabla de datos\n_c4 = CategorySelect;\nconst DownloadButton = styled.button`\n  background-color: white;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 8px;              /* Padding del botón - AJUSTABLE */\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  &:hover {\n    background-color: #f5f5f5;\n  }\n`;\n\n// Panel para contener la tabla o la gráfica\n_c5 = DownloadButton;\nconst DataPanel = styled.div`\n  background: rgba(123, 95, 61, 0.8);\n  box-shadow: inset -5px -5px 10px rgba(238, 209, 146, 0.5), \n              10px 10px 20px rgba(245, 239, 230, 0.2);\n  backdrop-filter: blur(10000px);\n  filter: drop-shadow(5px 5px 10px rgba(248, 202, 132, 3));\n  border: 1px solid rgba(248, 216, 186, 0.25);\n  border-radius: 10px;\n  padding: 20px;             /* Padding interno del panel - AJUSTABLE */\n  width: calc(50% - 15px);   /* Ancho de cada panel (50% - mitad del gap) - AJUSTABLE */\n  min-width: 300px;          /* Ancho mínimo - AJUSTABLE */\n  max-height: 600px;         /* Altura máxima - AJUSTABLE */\n  overflow: auto;            /* Permite scroll si el contenido es muy largo */\n  \n  @media (max-width: 1200px) {\n    width: 100%;\n  }\n`;\n\n// Estilo de la tabla\n_c6 = DataPanel;\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  background-color: white;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\n// Estilo para las celdas de cabecera de la tabla\n_c7 = Table;\nconst Th = styled.th`\n  background-color: #f0f0f0;\n  color: #333;\n  padding: 12px;             /* Padding de las celdas - AJUSTABLE */\n  text-align: left;\n  border: 1px solid #ddd;\n`;\n\n// Estilo para las celdas de datos de la tabla\n_c8 = Th;\nconst Td = styled.td`\n  padding: 12px;             /* Padding de las celdas - AJUSTABLE */\n  text-align: left;\n  border: 1px solid #ddd;\n`;\n\n// Contenedor para la gráfica\n_c9 = Td;\nconst ChartContainer = styled.div`\n  background-color: white;\n  border-radius: 8px;\n  padding: 20px;             /* Padding interno - AJUSTABLE */\n  width: 100%;\n  height: 350px;             /* Altura fija para la gráfica - AJUSTABLE */\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Estilo para mostrar el valor actual de la medición\n_c10 = ChartContainer;\nconst CurrentValue = styled.div`\n  text-align: center;\n  font-size: 2.5rem;         /* Tamaño de fuente - AJUSTABLE */\n  font-weight: bold;\n  margin-bottom: 20px;       /* Margen inferior - AJUSTABLE */\n`;\n\n// Título de la gráfica\n_c11 = CurrentValue;\nconst ChartTitle = styled.h3`\n  text-align: center;\n  margin-bottom: 10px;       /* Margen inferior - AJUSTABLE */\n  color: #333;\n`;\n\n// Título principal (no utilizado actualmente)\n_c12 = ChartTitle;\nconst Title = styled.h1`\n  text-align: center;\n  font-size: 2rem;           /* Tamaño de fuente - AJUSTABLE */\n  margin-bottom: 20px;       /* Margen inferior - AJUSTABLE */\n  color: #333;\n`;\n\n// Categorías disponibles para seleccionar\nconst categories = ['Temperatura', 'Iluminacion', 'Humedad'];\n\n// Datos de ejemplo para cada categoría\nconst initialData = {\n  Temperatura: [{\n    fecha: '01/02/2024',\n    dato: '29°C'\n  }, {\n    fecha: '02/02/2024',\n    dato: '30°C'\n  }\n  // ...más datos de temperatura\n  ],\n  Iluminacion: [{\n    fecha: '01/02/2024',\n    dato: '350 lux'\n  }, {\n    fecha: '02/02/2024',\n    dato: '340 lux'\n  }\n  // ...más datos de iluminación\n  ],\n  Humedad: [{\n    fecha: '01/02/2024',\n    dato: '60%'\n  }, {\n    fecha: '02/02/2024',\n    dato: '58%'\n  }\n  // ...más datos de humedad\n  ]\n};\n\n/**\r\n * Prepara los datos para la gráfica Chart.js\r\n * @param {Array} data - Array de objetos con fecha y dato\r\n * @param {String} category - Categoría seleccionada\r\n * @returns {Object} Objeto formateado para Chart.js\r\n */\nconst prepareChartData = (data, category) => {\n  // Convertir los datos de string a números\n  const numericalData = data.map(item => {\n    // Extraer el valor numérico del dato (elimina símbolos como °C, %, lux)\n    let value = parseFloat(item.dato.replace(/[^\\d.-]/g, ''));\n    return {\n      fecha: item.fecha,\n      valor: value\n    };\n  });\n\n  // Formato para Chart.js\n  const chartData = {\n    labels: numericalData.map(item => item.fecha),\n    datasets: [{\n      label: category,\n      data: numericalData.map(item => item.valor),\n      fill: false,\n      backgroundColor: '#FF8C00',\n      // Color naranja - AJUSTABLE\n      borderColor: '#FF8C00',\n      // Color naranja - AJUSTABLE\n      tension: 0.4 // Suavidad de la curva - AJUSTABLE (0 = líneas rectas)\n    }]\n  };\n  return chartData;\n};\n\n// Opciones de configuración para la gráfica\nconst chartOptions = {\n  responsive: true,\n  maintainAspectRatio: false,\n  // Importante para controlar el tamaño de la gráfica\n  plugins: {\n    legend: {\n      display: false // Oculta la leyenda\n    },\n    tooltip: {\n      mode: 'index',\n      intersect: false\n    }\n  },\n  scales: {\n    x: {\n      display: false // Oculta el eje X\n    },\n    y: {\n      display: false // Oculta el eje Y\n    }\n  },\n  elements: {\n    point: {\n      radius: 0 // Oculta los puntos de datos\n    }\n  }\n};\n\n/**\r\n * Componente principal para la visualización del historial de datos\r\n */\nfunction Historial() {\n  _s();\n  // Estado para la categoría seleccionada (Temperatura, Humedad, Iluminación)\n  const [selectedCategory, setSelectedCategory] = useState(categories[0]);\n\n  // Estado para los datos filtrados según la categoría seleccionada\n  const [filteredData, setFilteredData] = useState(initialData[selectedCategory]);\n\n  // Estado para los datos de la gráfica\n  const [chartData, setChartData] = useState(null);\n\n  // Estado para el valor actual a mostrar prominentemente\n  const [currentValue, setCurrentValue] = useState('');\n\n  // Unidades según la categoría seleccionada\n  const unidades = {\n    'Temperatura': '°C',\n    'Humedad': '%',\n    'Iluminacion': 'lux'\n  };\n\n  // Efecto para actualizar los datos cuando cambia la categoría\n  useEffect(() => {\n    // Actualiza los datos de la tabla\n    setFilteredData(initialData[selectedCategory]);\n\n    // Prepara los datos para la gráfica\n    setChartData(prepareChartData(initialData[selectedCategory], selectedCategory));\n\n    // Obtiene el valor más reciente para mostrar\n    const lastItem = initialData[selectedCategory][initialData[selectedCategory].length - 1];\n    setCurrentValue(lastItem.dato);\n  }, [selectedCategory]);\n\n  // Manejador para el cambio de categoría\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      showUserIcon: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(ControlsRow, {\n        children: [/*#__PURE__*/_jsxDEV(CategorySelect, {\n          onChange: handleCategoryChange,\n          value: selectedCategory,\n          children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category,\n            children: category\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DownloadButton, {\n          children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContentRow, {\n        children: [/*#__PURE__*/_jsxDEV(DataPanel, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(Th, {\n                  children: \"Fecha\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Th, {\n                  children: \"Dato\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: filteredData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(Td, {\n                  children: item.fecha\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  children: item.dato\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DataPanel, {\n          children: /*#__PURE__*/_jsxDEV(ChartContainer, {\n            children: [/*#__PURE__*/_jsxDEV(ChartTitle, {\n              children: selectedCategory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CurrentValue, {\n              children: currentValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: '180px',\n                maxWidth: '100%',\n                flexGrow: 1\n              },\n              children: chartData && /*#__PURE__*/_jsxDEV(Line, {\n                data: chartData,\n                options: chartOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Historial, \"uqf5sKrsWfPxSvs4XjXgxffi8W8=\");\n_c13 = Historial;\nexport default Historial;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ControlsRow\");\n$RefreshReg$(_c3, \"ContentRow\");\n$RefreshReg$(_c4, \"CategorySelect\");\n$RefreshReg$(_c5, \"DownloadButton\");\n$RefreshReg$(_c6, \"DataPanel\");\n$RefreshReg$(_c7, \"Table\");\n$RefreshReg$(_c8, \"Th\");\n$RefreshReg$(_c9, \"Td\");\n$RefreshReg$(_c10, \"ChartContainer\");\n$RefreshReg$(_c11, \"CurrentValue\");\n$RefreshReg$(_c12, \"ChartTitle\");\n$RefreshReg$(_c13, \"Historial\");","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","Line","styled","useNavigate","Button","ArrowDown","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","Column","Row","ControlsRow","_c2","ContentRow","_c3","CategorySelect","select","_c4","DownloadButton","button","_c5","DataPanel","_c6","Table","table","_c7","Th","th","_c8","Td","td","_c9","ChartContainer","_c10","CurrentValue","_c11","ChartTitle","h3","_c12","Title","h1","categories","initialData","Temperatura","fecha","dato","Iluminacion","Humedad","prepareChartData","data","category","numericalData","map","item","value","parseFloat","replace","valor","chartData","labels","datasets","label","fill","backgroundColor","borderColor","tension","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","tooltip","mode","intersect","scales","x","y","elements","point","radius","Historial","_s","selectedCategory","setSelectedCategory","filteredData","setFilteredData","setChartData","currentValue","setCurrentValue","unidades","lastItem","length","handleCategoryChange","event","target","children","showUserIcon","fileName","_jsxFileName","lineNumber","columnNumber","onChange","size","index","style","height","maxWidth","flexGrow","options","_c13","$RefreshReg$"],"sources":["C:/Users/Roger/Documents/TT2_AVANCES/prototipo-gecko/frontend/src/pages/historial.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Button from \"../components/Button\";\r\nimport { ArrowDown } from \"lucide-react\";\r\n\r\n// Contenedor principal que alberga toda la interfaz\r\nconst Container = styled.div`\r\n  padding: 50px 30px;\r\n  margin: auto;\r\n  max-width: 1400px;         /* Ancho máximo del contenedor - AJUSTABLE */\r\n  background: #f8f4e1;\r\n  border-radius: 20px;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  min-height: 85vh;          /* Altura mínima - AJUSTABLE */\r\n`;\r\n\r\n// Componente para crear columnas flexibles\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n`;\r\n\r\n// Componente base para crear filas flexibles\r\nconst Row = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 20px;\r\n  padding: 20px;             /* Padding de las filas - AJUSTABLE */\r\n  margin: auto;\r\n  width: 100%;\r\n  border-radius: 25px;\r\n`;\r\n\r\n// Fila específica para los controles (selector y botón)\r\nconst ControlsRow = styled(Row)`\r\n  background: transparent;\r\n  justify-content: flex-start;\r\n  gap: 15px;\r\n  padding: 10px 20px;        /* Padding reducido - AJUSTABLE */\r\n`;\r\n\r\n// Fila para el contenido principal (tabla y gráfica)\r\nconst ContentRow = styled(Row)`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  gap: 30px;                 /* Espacio entre tabla y gráfica - AJUSTABLE */\r\n  \r\n  @media (max-width: 1200px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\n// Selector de categorías (Temperatura, Humedad, Iluminación)\r\nconst CategorySelect = styled.select`\r\n  padding: 12px 15px;        /* Padding interno - AJUSTABLE */\r\n  border-radius: 5px;\r\n  border: 1px solid #ccc;\r\n  background-color: white;\r\n  width: 300px;              /* Ancho del selector - AJUSTABLE */\r\n  font-size: 16px;           /* Tamaño de fuente - AJUSTABLE */\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #B4864D;\r\n  }\r\n`;\r\n\r\n// Botón para descargar la tabla de datos\r\nconst DownloadButton = styled.button`\r\n  background-color: white;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  padding: 8px;              /* Padding del botón - AJUSTABLE */\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  &:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n`;\r\n\r\n// Panel para contener la tabla o la gráfica\r\nconst DataPanel = styled.div`\r\n  background: rgba(123, 95, 61, 0.8);\r\n  box-shadow: inset -5px -5px 10px rgba(238, 209, 146, 0.5), \r\n              10px 10px 20px rgba(245, 239, 230, 0.2);\r\n  backdrop-filter: blur(10000px);\r\n  filter: drop-shadow(5px 5px 10px rgba(248, 202, 132, 3));\r\n  border: 1px solid rgba(248, 216, 186, 0.25);\r\n  border-radius: 10px;\r\n  padding: 20px;             /* Padding interno del panel - AJUSTABLE */\r\n  width: calc(50% - 15px);   /* Ancho de cada panel (50% - mitad del gap) - AJUSTABLE */\r\n  min-width: 300px;          /* Ancho mínimo - AJUSTABLE */\r\n  max-height: 600px;         /* Altura máxima - AJUSTABLE */\r\n  overflow: auto;            /* Permite scroll si el contenido es muy largo */\r\n  \r\n  @media (max-width: 1200px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\n// Estilo de la tabla\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  background-color: white;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n`;\r\n\r\n// Estilo para las celdas de cabecera de la tabla\r\nconst Th = styled.th`\r\n  background-color: #f0f0f0;\r\n  color: #333;\r\n  padding: 12px;             /* Padding de las celdas - AJUSTABLE */\r\n  text-align: left;\r\n  border: 1px solid #ddd;\r\n`;\r\n\r\n// Estilo para las celdas de datos de la tabla\r\nconst Td = styled.td`\r\n  padding: 12px;             /* Padding de las celdas - AJUSTABLE */\r\n  text-align: left;\r\n  border: 1px solid #ddd;\r\n`;\r\n\r\n// Contenedor para la gráfica\r\nconst ChartContainer = styled.div`\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  padding: 20px;             /* Padding interno - AJUSTABLE */\r\n  width: 100%;\r\n  height: 350px;             /* Altura fija para la gráfica - AJUSTABLE */\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Estilo para mostrar el valor actual de la medición\r\nconst CurrentValue = styled.div`\r\n  text-align: center;\r\n  font-size: 2.5rem;         /* Tamaño de fuente - AJUSTABLE */\r\n  font-weight: bold;\r\n  margin-bottom: 20px;       /* Margen inferior - AJUSTABLE */\r\n`;\r\n\r\n// Título de la gráfica\r\nconst ChartTitle = styled.h3`\r\n  text-align: center;\r\n  margin-bottom: 10px;       /* Margen inferior - AJUSTABLE */\r\n  color: #333;\r\n`;\r\n\r\n// Título principal (no utilizado actualmente)\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  font-size: 2rem;           /* Tamaño de fuente - AJUSTABLE */\r\n  margin-bottom: 20px;       /* Margen inferior - AJUSTABLE */\r\n  color: #333;\r\n`;\r\n\r\n// Categorías disponibles para seleccionar\r\nconst categories = ['Temperatura', 'Iluminacion', 'Humedad'];\r\n\r\n// Datos de ejemplo para cada categoría\r\nconst initialData = {\r\n  Temperatura: [\r\n    { fecha: '01/02/2024', dato: '29°C' },\r\n    { fecha: '02/02/2024', dato: '30°C' },\r\n    // ...más datos de temperatura\r\n  ],\r\n  Iluminacion: [\r\n    { fecha: '01/02/2024', dato: '350 lux' },\r\n    { fecha: '02/02/2024', dato: '340 lux' },\r\n    // ...más datos de iluminación\r\n  ],\r\n  Humedad: [\r\n    { fecha: '01/02/2024', dato: '60%' },\r\n    { fecha: '02/02/2024', dato: '58%' },\r\n    // ...más datos de humedad\r\n  ],\r\n};\r\n\r\n/**\r\n * Prepara los datos para la gráfica Chart.js\r\n * @param {Array} data - Array de objetos con fecha y dato\r\n * @param {String} category - Categoría seleccionada\r\n * @returns {Object} Objeto formateado para Chart.js\r\n */\r\nconst prepareChartData = (data, category) => {\r\n  // Convertir los datos de string a números\r\n  const numericalData = data.map(item => {\r\n    // Extraer el valor numérico del dato (elimina símbolos como °C, %, lux)\r\n    let value = parseFloat(item.dato.replace(/[^\\d.-]/g, ''));\r\n    return {\r\n      fecha: item.fecha,\r\n      valor: value\r\n    };\r\n  });\r\n\r\n  // Formato para Chart.js\r\n  const chartData = {\r\n    labels: numericalData.map(item => item.fecha),\r\n    datasets: [\r\n      {\r\n        label: category,\r\n        data: numericalData.map(item => item.valor),\r\n        fill: false,\r\n        backgroundColor: '#FF8C00',  // Color naranja - AJUSTABLE\r\n        borderColor: '#FF8C00',      // Color naranja - AJUSTABLE\r\n        tension: 0.4,                // Suavidad de la curva - AJUSTABLE (0 = líneas rectas)\r\n      }\r\n    ]\r\n  };\r\n  \r\n  return chartData;\r\n};\r\n\r\n// Opciones de configuración para la gráfica\r\nconst chartOptions = {\r\n  responsive: true,\r\n  maintainAspectRatio: false,  // Importante para controlar el tamaño de la gráfica\r\n  plugins: {\r\n    legend: {\r\n      display: false            // Oculta la leyenda\r\n    },\r\n    tooltip: {\r\n      mode: 'index',\r\n      intersect: false,\r\n    }\r\n  },\r\n  scales: {\r\n    x: {\r\n      display: false,           // Oculta el eje X\r\n    },\r\n    y: {\r\n      display: false,           // Oculta el eje Y\r\n    }\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,                // Oculta los puntos de datos\r\n    },\r\n  }\r\n};\r\n\r\n/**\r\n * Componente principal para la visualización del historial de datos\r\n */\r\nfunction Historial() {\r\n  // Estado para la categoría seleccionada (Temperatura, Humedad, Iluminación)\r\n  const [selectedCategory, setSelectedCategory] = useState(categories[0]);\r\n  \r\n  // Estado para los datos filtrados según la categoría seleccionada\r\n  const [filteredData, setFilteredData] = useState(initialData[selectedCategory]);\r\n  \r\n  // Estado para los datos de la gráfica\r\n  const [chartData, setChartData] = useState(null);\r\n  \r\n  // Estado para el valor actual a mostrar prominentemente\r\n  const [currentValue, setCurrentValue] = useState('');\r\n  \r\n  // Unidades según la categoría seleccionada\r\n  const unidades = {\r\n    'Temperatura': '°C',\r\n    'Humedad': '%',\r\n    'Iluminacion': 'lux'\r\n  };\r\n\r\n  // Efecto para actualizar los datos cuando cambia la categoría\r\n  useEffect(() => {\r\n    // Actualiza los datos de la tabla\r\n    setFilteredData(initialData[selectedCategory]);\r\n    \r\n    // Prepara los datos para la gráfica\r\n    setChartData(prepareChartData(initialData[selectedCategory], selectedCategory));\r\n    \r\n    // Obtiene el valor más reciente para mostrar\r\n    const lastItem = initialData[selectedCategory][initialData[selectedCategory].length - 1];\r\n    setCurrentValue(lastItem.dato);\r\n  }, [selectedCategory]);\r\n\r\n  // Manejador para el cambio de categoría\r\n  const handleCategoryChange = (event) => {\r\n    setSelectedCategory(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Cabecera de la aplicación */}\r\n      <Header showUserIcon={true} />\r\n      \r\n      {/* Contenedor principal */}\r\n      <Container>\r\n        {/* Fila de controles: selector de categoría y botón de descarga */}\r\n        <ControlsRow>\r\n          <CategorySelect onChange={handleCategoryChange} value={selectedCategory}>\r\n            {categories.map((category) => (\r\n              <option key={category} value={category}>\r\n                {category}\r\n              </option>\r\n            ))}\r\n          </CategorySelect>\r\n          \r\n          <DownloadButton>\r\n            <ArrowDown size={24} />\r\n          </DownloadButton>\r\n        </ControlsRow>\r\n        \r\n        {/* Fila de contenido: tabla y gráfica */}\r\n        <ContentRow>\r\n          {/* Panel izquierdo: Tabla de datos históricos */}\r\n          <DataPanel>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <Th>Fecha</Th>\r\n                  <Th>Dato</Th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredData.map((item, index) => (\r\n                  <tr key={index}>\r\n                    <Td>{item.fecha}</Td>\r\n                    <Td>{item.dato}</Td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </DataPanel>\r\n          \r\n          {/* Panel derecho: Gráfica y valor actual */}\r\n          <DataPanel>\r\n            <ChartContainer>\r\n              {/* Título de la gráfica (categoría seleccionada) */}\r\n              <ChartTitle>{selectedCategory}</ChartTitle>\r\n              \r\n              {/* Valor actual */}\r\n              <CurrentValue>{currentValue}</CurrentValue>\r\n              \r\n              {/* Contenedor para la gráfica - Altura ajustable */}\r\n              <div style={{ height: '180px', maxWidth: '100%', flexGrow: 1 }}>\r\n                {chartData && <Line data={chartData} options={chartOptions} />}\r\n              </div>\r\n            </ChartContainer>\r\n          </DataPanel>\r\n        </ContentRow>\r\n      </Container>\r\n      \r\n      {/* Pie de página */}\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Historial;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,SAAS,QAAQ,cAAc;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,SAAS,GAAGR,MAAM,CAACS,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,EAAA,GAbMF,SAAS;AAcf,MAAMG,MAAM,GAAGX,MAAM,CAACS,GAAG;AACzB;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMG,GAAG,GAAGZ,MAAM,CAACS,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMI,WAAW,GAAGb,MAAM,CAACY,GAAG,CAAC;AAC/B;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAE,GAAA,GAPMD,WAAW;AAQjB,MAAME,UAAU,GAAGf,MAAM,CAACY,GAAG,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAI,GAAA,GAVMD,UAAU;AAWhB,MAAME,cAAc,GAAGjB,MAAM,CAACkB,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GAdMF,cAAc;AAepB,MAAMG,cAAc,GAAGpB,MAAM,CAACqB,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GAfMF,cAAc;AAgBpB,MAAMG,SAAS,GAAGvB,MAAM,CAACS,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAe,GAAA,GAnBMD,SAAS;AAoBf,MAAME,KAAK,GAAGzB,MAAM,CAAC0B,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GARMF,KAAK;AASX,MAAMG,EAAE,GAAG5B,MAAM,CAAC6B,EAAE;AACpB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GARMF,EAAE;AASR,MAAMG,EAAE,GAAG/B,MAAM,CAACgC,EAAE;AACpB;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GANMF,EAAE;AAOR,MAAMG,cAAc,GAAGlC,MAAM,CAACS,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAA0B,IAAA,GAXMD,cAAc;AAYpB,MAAME,YAAY,GAAGpC,MAAM,CAACS,GAAG;AAC/B;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAA4B,IAAA,GAPMD,YAAY;AAQlB,MAAME,UAAU,GAAGtC,MAAM,CAACuC,EAAE;AAC5B;AACA;AACA;AACA,CAAC;;AAED;AAAAC,IAAA,GANMF,UAAU;AAOhB,MAAMG,KAAK,GAAGzC,MAAM,CAAC0C,EAAE;AACvB;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMC,UAAU,GAAG,CAAC,aAAa,EAAE,aAAa,EAAE,SAAS,CAAC;;AAE5D;AACA,MAAMC,WAAW,GAAG;EAClBC,WAAW,EAAE,CACX;IAAEC,KAAK,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAO,CAAC,EACrC;IAAED,KAAK,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAO;EACpC;EAAA,CACD;EACDC,WAAW,EAAE,CACX;IAAEF,KAAK,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAU,CAAC,EACxC;IAAED,KAAK,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAU;EACvC;EAAA,CACD;EACDE,OAAO,EAAE,CACP;IAAEH,KAAK,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAM,CAAC,EACpC;IAAED,KAAK,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAM;EACnC;EAAA;AAEJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,gBAAgB,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;EAC3C;EACA,MAAMC,aAAa,GAAGF,IAAI,CAACG,GAAG,CAACC,IAAI,IAAI;IACrC;IACA,IAAIC,KAAK,GAAGC,UAAU,CAACF,IAAI,CAACR,IAAI,CAACW,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACzD,OAAO;MACLZ,KAAK,EAAES,IAAI,CAACT,KAAK;MACjBa,KAAK,EAAEH;IACT,CAAC;EACH,CAAC,CAAC;;EAEF;EACA,MAAMI,SAAS,GAAG;IAChBC,MAAM,EAAER,aAAa,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACT,KAAK,CAAC;IAC7CgB,QAAQ,EAAE,CACR;MACEC,KAAK,EAAEX,QAAQ;MACfD,IAAI,EAAEE,aAAa,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACI,KAAK,CAAC;MAC3CK,IAAI,EAAE,KAAK;MACXC,eAAe,EAAE,SAAS;MAAG;MAC7BC,WAAW,EAAE,SAAS;MAAO;MAC7BC,OAAO,EAAE,GAAG,CAAiB;IAC/B,CAAC;EAEL,CAAC;EAED,OAAOP,SAAS;AAClB,CAAC;;AAED;AACA,MAAMQ,YAAY,GAAG;EACnBC,UAAU,EAAE,IAAI;EAChBC,mBAAmB,EAAE,KAAK;EAAG;EAC7BC,OAAO,EAAE;IACPC,MAAM,EAAE;MACNC,OAAO,EAAE,KAAK,CAAY;IAC5B,CAAC;IACDC,OAAO,EAAE;MACPC,IAAI,EAAE,OAAO;MACbC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,MAAM,EAAE;IACNC,CAAC,EAAE;MACDL,OAAO,EAAE,KAAK,CAAY;IAC5B,CAAC;IACDM,CAAC,EAAE;MACDN,OAAO,EAAE,KAAK,CAAY;IAC5B;EACF,CAAC;EACDO,QAAQ,EAAE;IACRC,KAAK,EAAE;MACLC,MAAM,EAAE,CAAC,CAAiB;IAC5B;EACF;AACF,CAAC;;AAED;AACA;AACA;AACA,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3F,QAAQ,CAACgD,UAAU,CAAC,CAAC,CAAC,CAAC;;EAEvE;EACA,MAAM,CAAC4C,YAAY,EAAEC,eAAe,CAAC,GAAG7F,QAAQ,CAACiD,WAAW,CAACyC,gBAAgB,CAAC,CAAC;;EAE/E;EACA,MAAM,CAACzB,SAAS,EAAE6B,YAAY,CAAC,GAAG9F,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACA,MAAM,CAAC+F,YAAY,EAAEC,eAAe,CAAC,GAAGhG,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAMiG,QAAQ,GAAG;IACf,aAAa,EAAE,IAAI;IACnB,SAAS,EAAE,GAAG;IACd,aAAa,EAAE;EACjB,CAAC;;EAED;EACAhG,SAAS,CAAC,MAAM;IACd;IACA4F,eAAe,CAAC5C,WAAW,CAACyC,gBAAgB,CAAC,CAAC;;IAE9C;IACAI,YAAY,CAACvC,gBAAgB,CAACN,WAAW,CAACyC,gBAAgB,CAAC,EAAEA,gBAAgB,CAAC,CAAC;;IAE/E;IACA,MAAMQ,QAAQ,GAAGjD,WAAW,CAACyC,gBAAgB,CAAC,CAACzC,WAAW,CAACyC,gBAAgB,CAAC,CAACS,MAAM,GAAG,CAAC,CAAC;IACxFH,eAAe,CAACE,QAAQ,CAAC9C,IAAI,CAAC;EAChC,CAAC,EAAE,CAACsC,gBAAgB,CAAC,CAAC;;EAEtB;EACA,MAAMU,oBAAoB,GAAIC,KAAK,IAAK;IACtCV,mBAAmB,CAACU,KAAK,CAACC,MAAM,CAACzC,KAAK,CAAC;EACzC,CAAC;EAED,oBACEnD,OAAA,CAAAE,SAAA;IAAA2F,QAAA,gBAEE7F,OAAA,CAACR,MAAM;MAACsG,YAAY,EAAE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAG9BlG,OAAA,CAACG,SAAS;MAAA0F,QAAA,gBAER7F,OAAA,CAACQ,WAAW;QAAAqF,QAAA,gBACV7F,OAAA,CAACY,cAAc;UAACuF,QAAQ,EAAET,oBAAqB;UAACvC,KAAK,EAAE6B,gBAAiB;UAAAa,QAAA,EACrEvD,UAAU,CAACW,GAAG,CAAEF,QAAQ,iBACvB/C,OAAA;YAAuBmD,KAAK,EAAEJ,QAAS;YAAA8C,QAAA,EACpC9C;UAAQ,GADEA,QAAQ;YAAAgD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEb,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACY,CAAC,eAEjBlG,OAAA,CAACe,cAAc;UAAA8E,QAAA,eACb7F,OAAA,CAACF,SAAS;YAACsG,IAAI,EAAE;UAAG;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAGdlG,OAAA,CAACU,UAAU;QAAAmF,QAAA,gBAET7F,OAAA,CAACkB,SAAS;UAAA2E,QAAA,eACR7F,OAAA,CAACoB,KAAK;YAAAyE,QAAA,gBACJ7F,OAAA;cAAA6F,QAAA,eACE7F,OAAA;gBAAA6F,QAAA,gBACE7F,OAAA,CAACuB,EAAE;kBAAAsE,QAAA,EAAC;gBAAK;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACdlG,OAAA,CAACuB,EAAE;kBAAAsE,QAAA,EAAC;gBAAI;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACRlG,OAAA;cAAA6F,QAAA,EACGX,YAAY,CAACjC,GAAG,CAAC,CAACC,IAAI,EAAEmD,KAAK,kBAC5BrG,OAAA;gBAAA6F,QAAA,gBACE7F,OAAA,CAAC0B,EAAE;kBAAAmE,QAAA,EAAE3C,IAAI,CAACT;gBAAK;kBAAAsD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACrBlG,OAAA,CAAC0B,EAAE;kBAAAmE,QAAA,EAAE3C,IAAI,CAACR;gBAAI;kBAAAqD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA,GAFbG,KAAK;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAGV,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAGZlG,OAAA,CAACkB,SAAS;UAAA2E,QAAA,eACR7F,OAAA,CAAC6B,cAAc;YAAAgE,QAAA,gBAEb7F,OAAA,CAACiC,UAAU;cAAA4D,QAAA,EAAEb;YAAgB;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eAG3ClG,OAAA,CAAC+B,YAAY;cAAA8D,QAAA,EAAER;YAAY;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAe,CAAC,eAG3ClG,OAAA;cAAKsG,KAAK,EAAE;gBAAEC,MAAM,EAAE,OAAO;gBAAEC,QAAQ,EAAE,MAAM;gBAAEC,QAAQ,EAAE;cAAE,CAAE;cAAAZ,QAAA,EAC5DtC,SAAS,iBAAIvD,OAAA,CAACN,IAAI;gBAACoD,IAAI,EAAES,SAAU;gBAACmD,OAAO,EAAE3C;cAAa;gBAAAgC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3D,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAGZlG,OAAA,CAACP,MAAM;MAAAsG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACV,CAAC;AAEP;AAACnB,EAAA,CAxGQD,SAAS;AAAA6B,IAAA,GAAT7B,SAAS;AA0GlB,eAAeA,SAAS;AAAC,IAAAzE,EAAA,EAAAI,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAG,IAAA,EAAAwE,IAAA;AAAAC,YAAA,CAAAvG,EAAA;AAAAuG,YAAA,CAAAnG,GAAA;AAAAmG,YAAA,CAAAjG,GAAA;AAAAiG,YAAA,CAAA9F,GAAA;AAAA8F,YAAA,CAAA3F,GAAA;AAAA2F,YAAA,CAAAzF,GAAA;AAAAyF,YAAA,CAAAtF,GAAA;AAAAsF,YAAA,CAAAnF,GAAA;AAAAmF,YAAA,CAAAhF,GAAA;AAAAgF,YAAA,CAAA9E,IAAA;AAAA8E,YAAA,CAAA5E,IAAA;AAAA4E,YAAA,CAAAzE,IAAA;AAAAyE,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}