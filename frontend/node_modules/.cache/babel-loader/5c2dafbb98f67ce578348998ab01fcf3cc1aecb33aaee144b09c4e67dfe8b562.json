{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roger\\\\Documents\\\\TT2_AVANCES\\\\prototipo-gecko\\\\frontend\\\\src\\\\pages\\\\pruebasNotificaciones.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TemperaturaAlert = ({\n  temperatura,\n  setTemperatura\n}) => {\n  _s();\n  const [alertSent, setAlertSent] = useState(false);\n  const [alertStatus, setAlertStatus] = useState('');\n  const enviar_temperatura_alert = async temp => {\n    setAlertStatus('Enviando alerta...');\n    try {\n      const response = await fetch(\"http://localhost:5000/send-email\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          temperatura: temp\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log(\"Alerta enviada con éxito:\", data.message);\n        setAlertStatus('Alerta enviada con éxito');\n      } else {\n        console.error(\"Error en la respuesta del servidor:\", data.message);\n        setAlertStatus(`Error: ${data.message}`);\n      }\n    } catch (error) {\n      console.error(\"Error al enviar la alerta:\", error);\n      setAlertStatus(`Error de conexión: ${error.message}`);\n    }\n  };\n  const handleChange = e => {\n    const newTemperatura = parseFloat(e.target.value);\n    setTemperatura(newTemperatura);\n  };\n  useEffect(() => {\n    // Solo enviar alerta si la temperatura es válida (no NaN)\n    if (isNaN(temperatura)) return;\n    if (temperatura < 22 || temperatura > 32) {\n      if (!alertSent) {\n        console.log(\"Enviando alerta por temperatura:\", temperatura);\n        enviar_temperatura_alert(temperatura);\n        setAlertSent(true);\n      }\n    } else {\n      if (alertSent) {\n        setAlertSent(false); // Reiniciar cuando la temperatura vuelva a estar dentro del rango\n        setAlertStatus('');\n      }\n    }\n  }, [temperatura, alertSent]);\n\n  // Determinar el estilo basado en el rango de temperatura\n  const getTemperatureStyle = () => {\n    if (temperatura > 32) return {\n      color: 'red',\n      fontWeight: 'bold'\n    };\n    if (temperatura < 22) return {\n      color: 'blue',\n      fontWeight: 'bold'\n    };\n    return {\n      color: 'green'\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PruebasNotificaciones\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Monitoreo De Temperatura\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"temperatura\",\n        children: \"Temperatura (\\xB0C): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"temperatura\",\n        type: \"number\",\n        value: temperatura,\n        onChange: handleChange,\n        step: \"0.1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temperatura actual: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: getTemperatureStyle(),\n        children: [temperatura, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), temperatura < 22 && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'blue'\n      },\n      children: \"\\u26A0\\uFE0F Temperatura por debajo del rango normal (22\\xB0C - 32\\xB0C)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 28\n    }, this), temperatura > 32 && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: \"\\u26A0\\uFE0F Temperatura por encima del rango normal (22\\xB0C - 32\\xB0C)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 28\n    }, this), alertStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"alert-status\",\n      children: alertStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(TemperaturaAlert, \"vPwWCnYJ354lWa8hw1Ma/gN9mqs=\");\n_c = TemperaturaAlert;\nfunction PruebasNotificaciones() {\n  _s2();\n  const [temperatura, setTemperatura] = useState(25); // Valor inicial dentro del rango normal\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TemperaturaAlert, {\n      temperatura: temperatura,\n      setTemperatura: setTemperatura\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s2(PruebasNotificaciones, \"BSLE6W81eo5m/C7rYFlDzZ5wRTU=\");\n_c2 = PruebasNotificaciones;\nexport default PruebasNotificaciones;\nvar _c, _c2;\n$RefreshReg$(_c, \"TemperaturaAlert\");\n$RefreshReg$(_c2, \"PruebasNotificaciones\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","TemperaturaAlert","temperatura","setTemperatura","_s","alertSent","setAlertSent","alertStatus","setAlertStatus","enviar_temperatura_alert","temp","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","log","message","error","handleChange","e","newTemperatura","parseFloat","target","value","isNaN","getTemperatureStyle","color","fontWeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","onChange","step","style","_c","PruebasNotificaciones","_s2","_c2","$RefreshReg$"],"sources":["C:/Users/Roger/Documents/TT2_AVANCES/prototipo-gecko/frontend/src/pages/pruebasNotificaciones.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst TemperaturaAlert = ({ temperatura, setTemperatura }) => {\r\n  const [alertSent, setAlertSent] = useState(false);\r\n  const [alertStatus, setAlertStatus] = useState('');\r\n  \r\n  const enviar_temperatura_alert = async (temp) => {\r\n    setAlertStatus('Enviando alerta...');\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/send-email\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ temperatura: temp }),\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (response.ok) {\r\n        console.log(\"Alerta enviada con éxito:\", data.message);\r\n        setAlertStatus('Alerta enviada con éxito');\r\n      } else {\r\n        console.error(\"Error en la respuesta del servidor:\", data.message);\r\n        setAlertStatus(`Error: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al enviar la alerta:\", error);\r\n      setAlertStatus(`Error de conexión: ${error.message}`);\r\n    }\r\n  };\r\n  \r\n  const handleChange = (e) => {\r\n    const newTemperatura = parseFloat(e.target.value);\r\n    setTemperatura(newTemperatura);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    // Solo enviar alerta si la temperatura es válida (no NaN)\r\n    if (isNaN(temperatura)) return;\r\n    \r\n    if (temperatura < 22 || temperatura > 32) {\r\n      if (!alertSent) {\r\n        console.log(\"Enviando alerta por temperatura:\", temperatura);\r\n        enviar_temperatura_alert(temperatura);\r\n        setAlertSent(true);\r\n      }\r\n    } else {\r\n      if (alertSent) {\r\n        setAlertSent(false); // Reiniciar cuando la temperatura vuelva a estar dentro del rango\r\n        setAlertStatus('');\r\n      }\r\n    }\r\n  }, [temperatura, alertSent]);\r\n  \r\n  // Determinar el estilo basado en el rango de temperatura\r\n  const getTemperatureStyle = () => {\r\n    if (temperatura > 32) return { color: 'red', fontWeight: 'bold' };\r\n    if (temperatura < 22) return { color: 'blue', fontWeight: 'bold' };\r\n    return { color: 'green' };\r\n  };\r\n  \r\n  return (\r\n    <div className=\"PruebasNotificaciones\">\r\n      <h2>Monitoreo De Temperatura</h2>\r\n      <div>\r\n        <label htmlFor=\"temperatura\">Temperatura (°C): </label>\r\n        <input \r\n          id=\"temperatura\"\r\n          type=\"number\" \r\n          value={temperatura} \r\n          onChange={handleChange} \r\n          step=\"0.1\"\r\n        />\r\n      </div>\r\n      \r\n      <p>Temperatura actual: <span style={getTemperatureStyle()}>{temperatura}°C</span></p>\r\n      \r\n      {temperatura < 22 && <p style={{color: 'blue'}}>⚠️ Temperatura por debajo del rango normal (22°C - 32°C)</p>}\r\n      {temperatura > 32 && <p style={{color: 'red'}}>⚠️ Temperatura por encima del rango normal (22°C - 32°C)</p>}\r\n      \r\n      {alertStatus && <p className=\"alert-status\">{alertStatus}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction PruebasNotificaciones() {\r\n  const [temperatura, setTemperatura] = useState(25); // Valor inicial dentro del rango normal\r\n  \r\n  return (\r\n    <div>\r\n      <TemperaturaAlert temperatura={temperatura} setTemperatura={setTemperatura} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PruebasNotificaciones;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}